/**
 * OverType v1.0.0
 * A lightweight markdown editor library with perfect WYSIWYG alignment
 * @license MIT
 * @author Demo User
 * https://github.com/demo/overtype
 */
var OverType=(()=>{var y=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var V=Object.prototype.hasOwnProperty;var N=(a,t,e)=>t in a?y(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var P=(a,t)=>{for(var e in t)y(a,e,{get:t[e],enumerable:!0})},q=(a,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of T(t))!V.call(a,o)&&o!==e&&y(a,o,{get:()=>t[o],enumerable:!(r=_(t,o))||r.enumerable});return a};var F=a=>q(y({},"__esModule",{value:!0}),a);var h=(a,t,e)=>(N(a,typeof t!="symbol"?t+"":t,e),e);var D={};P(D,{OverType:()=>p,default:()=>K});var m=class{static escapeHtml(t){let e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};return t.replace(/[&<>"']/g,r=>e[r])}static preserveIndentation(t,e){let o=e.match(/^(\s*)/)[1].replace(/ /g,"&nbsp;");return t.replace(/^\s*/,o)}static parseHeader(t){return t.replace(/^(#{1,3})\s(.+)$/,(e,r,o)=>{let n=r.length;return`<span class="header ${["h1","h2","h3"][n-1]}"><span class="syntax-marker">${r}</span> ${o}</span>`})}static parseHorizontalRule(t){return t.match(/^(-{3,}|\*{3,}|_{3,})$/)?`<div><span class="hr-marker">${t}</span></div>`:null}static parseBlockquote(t){return t.replace(/^&gt; (.+)$/,(e,r)=>`<span class="blockquote"><span class="syntax-marker">&gt;</span> ${r}</span>`)}static parseBulletList(t){return t.replace(/^((?:&nbsp;)*)([-*])\s(.+)$/,(e,r,o,n)=>`${r}<span class="syntax-marker">${o}</span> ${n}`)}static parseNumberedList(t){return t.replace(/^((?:&nbsp;)*)(\d+\.)\s(.+)$/,(e,r,o,n)=>`${r}<span class="syntax-marker">${o}</span> ${n}`)}static parseCodeBlock(t){return t.startsWith("```")?`<div><span class="code-fence">${t}</span></div>`:null}static parseBold(t){return t=t.replace(/\*\*(.+?)\*\*/g,'<strong><span class="syntax-marker">**</span>$1<span class="syntax-marker">**</span></strong>'),t=t.replace(/__(.+?)__/g,'<strong><span class="syntax-marker">__</span>$1<span class="syntax-marker">__</span></strong>'),t}static parseItalic(t){return t=t.replace(new RegExp("(?<!\\*)\\*(?!\\*)(.+?)(?<!\\*)\\*(?!\\*)","g"),'<em><span class="syntax-marker">*</span>$1<span class="syntax-marker">*</span></em>'),t=t.replace(new RegExp("(?<!_)_(?!_)(.+?)(?<!_)_(?!_)","g"),'<em><span class="syntax-marker">_</span>$1<span class="syntax-marker">_</span></em>'),t}static parseInlineCode(t){return t.replace(/`(.+?)`/g,'<code><span class="syntax-marker">`</span>$1<span class="syntax-marker">`</span></code>')}static parseLinks(t){return t.replace(/\[(.+?)\]\((.+?)\)/g,'<a href="$2"><span class="syntax-marker">[</span>$1<span class="syntax-marker">](</span><span class="syntax-marker">$2</span><span class="syntax-marker">)</span></a>')}static parseInlineElements(t){let e=t;return e=this.parseInlineCode(e),e=this.parseLinks(e),e=this.parseBold(e),e=this.parseItalic(e),e}static parseLine(t){let e=this.escapeHtml(t);e=this.preserveIndentation(e,t);let r=this.parseHorizontalRule(e);if(r)return r;let o=this.parseCodeBlock(e);return o||(e=this.parseHeader(e),e=this.parseBlockquote(e),e=this.parseBulletList(e),e=this.parseNumberedList(e),e=this.parseInlineElements(e),e.trim()===""?"<div>&nbsp;</div>":`<div>${e}</div>`)}static parse(t,e=-1,r=!1){return t.split(`
`).map((i,l)=>r&&l===e?`<div class="raw-line">${this.escapeHtml(i)||"&nbsp;"}</div>`:this.parseLine(i)).join("")}};var u=class{constructor(t){this.editor=t,this.textarea=t.textarea}handleKeydown(t){if(!(navigator.platform.toLowerCase().includes("mac")?t.metaKey:t.ctrlKey))return!1;let o=null;switch(t.key.toLowerCase()){case"b":t.shiftKey||(o="toggleBold");break;case"i":t.shiftKey||(o="toggleItalic");break;case"k":t.shiftKey||(o="insertLink");break;case"7":t.shiftKey&&(o="toggleNumberedList");break;case"8":t.shiftKey&&(o="toggleBulletList");break}return o?(t.preventDefault(),this.editor.toolbar?this.editor.toolbar.handleAction(o):this.handleAction(o),!0):!1}async handleAction(t){let e=this.textarea;if(!e)return;e.focus();let r=window.markdownActions;if(!r){console.error("markdown-actions not available");return}try{switch(t){case"toggleBold":r.toggleBold(e);break;case"toggleItalic":r.toggleItalic(e);break;case"insertLink":r.insertLink(e);break;case"toggleBulletList":r.toggleBulletList(e);break;case"toggleNumberedList":r.toggleNumberedList(e);break}e.dispatchEvent(new Event("input",{bubbles:!0}))}catch(o){console.error("Error in markdown action:",o)}}destroy(){}};var c={name:"solar",colors:{bgPrimary:"#faf0ca",bgSecondary:"#ffffff",text:"#0d3b66",h1:"#f95738",h2:"#ee964b",h3:"#3d8a51",strong:"#ee964b",em:"#f95738",link:"#0d3b66",code:"#0d3b66",codeBg:"rgba(244, 211, 94, 0.4)",blockquote:"#5a7a9b",hr:"#5a7a9b",syntaxMarker:"rgba(13, 59, 102, 0.52)",cursor:"#f95738",selection:"rgba(244, 211, 94, 0.4)",listMarker:"#ee964b"}},w={name:"cave",colors:{bgPrimary:"#141E26",bgSecondary:"#1D2D3E",text:"#c5dde8",h1:"#d4a5ff",h2:"#f6ae2d",h3:"#9fcfec",strong:"#f6ae2d",em:"#9fcfec",link:"#9fcfec",code:"#c5dde8",codeBg:"#1a232b",blockquote:"#9fcfec",hr:"#c5dde8",syntaxMarker:"rgba(159, 207, 236, 0.73)",cursor:"#f26419",selection:"rgba(51, 101, 138, 0.4)",listMarker:"#f6ae2d"}},k={solar:c,cave:w,light:c,dark:w};function f(a){return typeof a=="string"?{...k[a]||k.solar,name:a}:a}function x(a){let t=[];for(let[e,r]of Object.entries(a)){let o=e.replace(/([A-Z])/g,"-$1").toLowerCase();t.push(`--${o}: ${r};`)}return t.join(`
`)}function C(a,t={}){return{...a,colors:{...a.colors,...t}}}function L(a={}){let{fontSize:t="14px",lineHeight:e=1.6,fontFamily:r="'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace",padding:o="20px",theme:n=null,mobile:i={}}=a,l=Object.keys(i).length>0?`
    @media (max-width: 640px) {
      .overtype-wrapper .overtype-input,
      .overtype-wrapper .overtype-preview {
        ${Object.entries(i).map(([v,b])=>`${v.replace(/([A-Z])/g,"-$1").toLowerCase()}: ${b} !important;`).join(`
        `)}
      }
    }
  `:"",d=n&&n.colors?x(n.colors):"";return`
    /* OverType Editor Styles */
    .overtype-wrapper {
      position: relative !important;
      width: 100% !important;
      height: 100% !important;
      overflow: hidden !important;
      background: var(--bg-secondary, #ffffff) !important;
      ${d?`
      /* Theme Variables */
      ${d}`:""}
    }

    /* Critical alignment styles - must be identical for both layers */
    .overtype-wrapper .overtype-input,
    .overtype-wrapper .overtype-preview {
      /* Positioning - must be identical */
      position: absolute !important;
      top: 0 !important;
      left: 0 !important;
      width: 100% !important;
      height: 100% !important;
      
      /* Font properties - any difference breaks alignment */
      font-family: ${r} !important;
      font-size: var(--instance-font-size, ${t}) !important;
      line-height: var(--instance-line-height, ${e}) !important;
      font-weight: normal !important;
      font-style: normal !important;
      font-variant: normal !important;
      font-stretch: normal !important;
      font-kerning: none !important;
      font-feature-settings: normal !important;
      
      /* Box model - must match exactly */
      padding: var(--instance-padding, ${o}) !important;
      margin: 0 !important;
      border: none !important;
      outline: none !important;
      box-sizing: border-box !important;
      
      /* Text layout - critical for character positioning */
      white-space: pre-wrap !important;
      word-wrap: break-word !important;
      word-break: normal !important;
      overflow-wrap: break-word !important;
      tab-size: 2 !important;
      -moz-tab-size: 2 !important;
      text-align: left !important;
      text-indent: 0 !important;
      letter-spacing: normal !important;
      word-spacing: normal !important;
      
      /* Text rendering */
      text-transform: none !important;
      text-rendering: auto !important;
      -webkit-font-smoothing: auto !important;
      -webkit-text-size-adjust: 100% !important;
      
      /* Direction and writing */
      direction: ltr !important;
      writing-mode: horizontal-tb !important;
      unicode-bidi: normal !important;
      text-orientation: mixed !important;
      
      /* Visual effects that could shift perception */
      text-shadow: none !important;
      filter: none !important;
      transform: none !important;
      zoom: 1 !important;
      
      /* Vertical alignment */
      vertical-align: baseline !important;
      
      /* Size constraints */
      min-width: 0 !important;
      min-height: 0 !important;
      max-width: none !important;
      max-height: none !important;
      
      /* Overflow */
      overflow-y: auto !important;
      overflow-x: auto !important;
      scrollbar-width: auto !important;
      scrollbar-gutter: auto !important;
      
      /* Animation/transition - disabled to prevent movement */
      animation: none !important;
      transition: none !important;
    }

    /* Input layer styles */
    .overtype-wrapper .overtype-input {
      /* Layer positioning */
      z-index: 1 !important;
      
      /* Text visibility */
      color: transparent !important;
      caret-color: var(--cursor, #f95738) !important;
      background-color: transparent !important;
      
      /* Textarea-specific */
      resize: none !important;
      appearance: none !important;
      -webkit-appearance: none !important;
      -moz-appearance: none !important;
      
      /* Prevent mobile zoom on focus */
      touch-action: manipulation !important;
      
      /* Disable autofill and spellcheck */
      autocomplete: off !important;
      autocorrect: off !important;
      autocapitalize: off !important;
      spellcheck: false !important;
    }

    .overtype-wrapper .overtype-input::selection {
      background-color: var(--selection, rgba(244, 211, 94, 0.4));
    }

    /* Preview layer styles */
    .overtype-wrapper .overtype-preview {
      /* Layer positioning */
      z-index: 0 !important;
      pointer-events: none !important;
      color: var(--text, #0d3b66) !important;
      background-color: transparent !important;
      
      /* Prevent text selection */
      user-select: none !important;
      -webkit-user-select: none !important;
      -moz-user-select: none !important;
      -ms-user-select: none !important;
    }

    /* Defensive styles for preview child divs */
    .overtype-wrapper .overtype-preview div {
      /* Reset any inherited styles */
      margin: 0 !important;
      padding: 0 !important;
      border: none !important;
      text-align: left !important;
      text-indent: 0 !important;
      display: block !important;
      position: static !important;
      transform: none !important;
      min-height: 0 !important;
      max-height: none !important;
      line-height: inherit !important;
      font-size: inherit !important;
      font-family: inherit !important;
    }

    /* Markdown element styling - NO SIZE CHANGES */
    .overtype-wrapper .overtype-preview .header {
      font-weight: bold !important;
    }

    /* Header colors */
    .overtype-wrapper .overtype-preview .h1 { 
      color: var(--h1, #f95738) !important; 
    }
    .overtype-wrapper .overtype-preview .h2 { 
      color: var(--h2, #ee964b) !important; 
    }
    .overtype-wrapper .overtype-preview .h3 { 
      color: var(--h3, #3d8a51) !important; 
    }

    /* Bold text */
    .overtype-wrapper .overtype-preview strong {
      color: var(--strong, #ee964b) !important;
      font-weight: bold !important;
    }

    /* Italic text */
    .overtype-wrapper .overtype-preview em {
      color: var(--em, #f95738) !important;
      text-decoration-color: var(--em, #f95738) !important;
      text-decoration-thickness: 1px !important;
      font-style: italic !important;
    }

    /* Inline code */
    .overtype-wrapper .overtype-preview code {
      background: var(--code-bg, rgba(244, 211, 94, 0.4)) !important;
      color: var(--code, #0d3b66) !important;
      padding: 0 !important;
      border-radius: 2px !important;
      font-family: inherit !important;
      font-weight: normal !important;
    }

    /* Code blocks */
    .overtype-wrapper .overtype-preview pre {
      background: #1e1e1e !important;
      padding: 0 !important;
      margin: 0 !important;
      border-radius: 4px !important;
      overflow-x: auto !important;
    }

    .overtype-wrapper .overtype-preview pre code {
      background: none !important;
    }

    /* Blockquotes */
    .overtype-wrapper .overtype-preview .blockquote {
      color: var(--blockquote, #5a7a9b) !important;
      padding: 0 !important;
      margin: 0 !important;
      border: none !important;
    }

    /* Links */
    .overtype-wrapper .overtype-preview a {
      color: var(--link, #0d3b66) !important;
      text-decoration: underline !important;
      font-weight: normal !important;
    }

    .overtype-wrapper .overtype-preview a:hover {
      text-decoration: underline !important;
      color: var(--link, #0d3b66) !important;
    }

    /* Lists - no list styling */
    .overtype-wrapper .overtype-preview ul,
    .overtype-wrapper .overtype-preview ol {
      list-style: none !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    .overtype-wrapper .overtype-preview li {
      margin: 0 !important;
      padding: 0 !important;
      list-style: none !important;
    }

    /* Horizontal rules */
    .overtype-wrapper .overtype-preview hr {
      border: none !important;
      color: var(--hr, #5a7a9b) !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    .overtype-wrapper .overtype-preview .hr-marker {
      color: var(--hr, #5a7a9b) !important;
      opacity: 0.6 !important;
    }

    /* Code fence markers - with background when not in code block */
    .overtype-wrapper .overtype-preview .code-fence {
      color: var(--code, #0d3b66) !important;
      background: var(--code-bg, rgba(244, 211, 94, 0.4)) !important;
    }
    
    /* Code block lines - background for entire code block */
    .overtype-wrapper .overtype-preview .code-block-line {
      background: var(--code-bg, rgba(244, 211, 94, 0.4)) !important;
    }
    
    /* Remove background from code fence when inside code block line */
    .overtype-wrapper .overtype-preview .code-block-line .code-fence {
      background: transparent !important;
    }

    /* Raw markdown line */
    .overtype-wrapper .overtype-preview .raw-line {
      color: var(--raw-line, #5a7a9b) !important;
      font-style: normal !important;
      font-weight: normal !important;
    }

    /* Syntax markers */
    .overtype-wrapper .overtype-preview .syntax-marker {
      color: var(--syntax-marker, rgba(13, 59, 102, 0.52)) !important;
      opacity: 0.7 !important;
    }

    /* List markers */
    .overtype-wrapper .overtype-preview .list-marker {
      color: var(--list-marker, #ee964b) !important;
    }

    /* Stats bar */
    .overtype-wrapper.with-stats {
      padding-bottom: 40px !important;
    }
    
    .overtype-wrapper .overtype-stats {
      position: absolute !important;
      bottom: 0 !important;
      left: 0 !important;
      right: 0 !important;
      height: 40px !important;
      padding: 0 20px !important;
      background: #f8f9fa !important;
      border-top: 1px solid #e0e0e0 !important;
      display: flex !important;
      justify-content: space-between !important;
      align-items: center !important;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
      font-size: 0.85rem !important;
      color: #666 !important;
      z-index: 2 !important;
    }
    
    /* Dark theme stats bar */
    .overtype-wrapper[data-theme="cave"] .overtype-stats {
      background: var(--bg-secondary, #1D2D3E) !important;
      border-top: 1px solid rgba(197, 221, 232, 0.1) !important;
      color: var(--text, #c5dde8) !important;
    }
    
    .overtype-wrapper .overtype-stats .overtype-stat {
      display: flex !important;
      align-items: center !important;
      gap: 5px !important;
      white-space: nowrap !important;
    }
    
    .overtype-wrapper .overtype-stats .live-dot {
      width: 8px !important;
      height: 8px !important;
      background: #4caf50 !important;
      border-radius: 50% !important;
      animation: pulse 2s infinite !important;
    }
    
    @keyframes pulse {
      0%, 100% { opacity: 1; transform: scale(1); }
      50% { opacity: 0.6; transform: scale(1.2); }
    }
    
    /* Adjust textarea and preview for stats bar */
    .overtype-wrapper.with-stats .overtype-input,
    .overtype-wrapper.with-stats .overtype-preview {
      height: calc(100% - 40px) !important;
    }

    /* Toolbar Styles */
    .overtype-toolbar {
      display: flex;
      align-items: center;
      gap: 4px;
      padding: 8px;
      background: var(--bg-primary, #f8f9fa);
      border: 1px solid var(--border, #e0e0e0);
      border-bottom: none;
      border-radius: 8px 8px 0 0;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
    }

    .overtype-toolbar-button {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 32px;
      height: 32px;
      padding: 0;
      border: none;
      border-radius: 6px;
      background: transparent;
      color: var(--text-secondary, #666);
      cursor: pointer;
      transition: all 0.2s ease;
      flex-shrink: 0;
    }

    .overtype-toolbar-button svg {
      width: 20px;
      height: 20px;
      fill: currentColor;
    }
    
    /* Special sizing for code block icon */
    .overtype-toolbar-button[data-action="insertCodeBlock"] svg {
      width: 24px;
      height: 18px;
      fill: transparent !important;
    }

    .overtype-toolbar-button:hover {
      background: var(--bg-secondary, #e9ecef);
      color: var(--text-primary, #333);
    }

    .overtype-toolbar-button:active {
      transform: scale(0.95);
    }

    .overtype-toolbar-button.active {
      background: var(--primary, #007bff);
      color: white;
    }

    .overtype-toolbar-button:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    .overtype-toolbar-separator {
      width: 1px;
      height: 24px;
      background: var(--border, #e0e0e0);
      margin: 0 4px;
      flex-shrink: 0;
    }

    /* Adjust wrapper when toolbar is present */
    .overtype-toolbar + .overtype-wrapper {
      border-radius: 0 0 8px 8px;
      border-top: none;
    }

    /* Mobile toolbar adjustments */
    @media (max-width: 640px) {
      .overtype-toolbar {
        padding: 6px;
        gap: 2px;
      }

      .overtype-toolbar-button {
        width: 36px;
        height: 36px;
      }

      .overtype-toolbar-separator {
        margin: 0 2px;
      }
    }

    ${l}
  `}var S=`<svg viewBox="0 0 18 18">
  <path stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z"></path>
  <path stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z"></path>
</svg>`,B=`<svg viewBox="0 0 18 18">
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="7" x2="13" y1="4" y2="4"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="5" x2="11" y1="14" y2="14"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="8" x2="10" y1="14" y2="4"></line>
</svg>`,A=`<svg viewBox="0 0 18 18">
  <path fill="currentColor" d="M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z"></path>
</svg>`,I=`<svg viewBox="0 0 18 18">
  <path fill="currentColor" d="M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z"></path>
</svg>`,H=`<svg viewBox="0 0 18 18">
  <path fill="currentColor" d="M16.65186,12.30664a2.6742,2.6742,0,0,1-2.915,2.68457,3.96592,3.96592,0,0,1-2.25537-.6709.56007.56007,0,0,1-.13232-.83594L11.64648,13c.209-.34082.48389-.36328.82471-.1543a2.32654,2.32654,0,0,0,1.12256.33008c.71484,0,1.12207-.35156,1.12207-.78125,0-.61523-.61621-.86816-1.46338-.86816H13.2085a.65159.65159,0,0,1-.68213-.41895l-.05518-.10937a.67114.67114,0,0,1,.14307-.78125l.71533-.86914a8.55289,8.55289,0,0,1,.68213-.7373V8.58887a3.93913,3.93913,0,0,1-.748.05469H11.9873a.54085.54085,0,0,1-.605-.60547V7.59863a.54085.54085,0,0,1,.605-.60547h3.75146a.53773.53773,0,0,1,.60547.59375v.17676a1.03723,1.03723,0,0,1-.27539.748L14.74854,10.0293A2.31132,2.31132,0,0,1,16.65186,12.30664ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z"></path>
</svg>`,j=`<svg viewBox="0 0 18 18">
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="7" x2="11" y1="7" y2="11"></line>
  <path stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z"></path>
  <path stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z"></path>
</svg>`,$=`<svg viewBox="0 0 18 18">
  <polyline stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" points="5 7 3 9 5 11"></polyline>
  <polyline stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" points="13 7 15 9 13 11"></polyline>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="10" x2="8" y1="5" y2="13"></line>
</svg>`,E=`<svg viewBox="0 0 46 33" fill="transparent" xmlns="http://www.w3.org/2000/svg">
  <path d="M35 8h3a5 5 0 0 1 5 5v12a5 5 0 0 1-5 5H18a5 5 0 0 1-5-5v-2" stroke="currentColor" stroke-width="4" stroke-linecap="round"></path>
  <path d="m9 2.5-6 6L9 14M20 2.5l6 6-6 5.5" stroke="currentColor" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"></path>
</svg>`,z=`<svg viewBox="0 0 18 18">
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="6" x2="15" y1="4" y2="4"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="6" x2="15" y1="9" y2="9"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="6" x2="15" y1="14" y2="14"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="3" x2="3" y1="4" y2="4"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="3" x2="3" y1="9" y2="9"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="3" x2="3" y1="14" y2="14"></line>
</svg>`,M=`<svg viewBox="0 0 18 18">
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="7" x2="15" y1="4" y2="4"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="7" x2="15" y1="9" y2="9"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" x1="7" x2="15" y1="14" y2="14"></line>
  <line stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" x1="2.5" x2="4.5" y1="5.5" y2="5.5"></line>
  <path fill="currentColor" d="M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z"></path>
  <path stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156"></path>
  <path stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109"></path>
</svg>`;var g=class{constructor(t){this.editor=t,this.container=null,this.buttons={}}create(){this.container=document.createElement("div"),this.container.className="overtype-toolbar",this.container.setAttribute("role","toolbar"),this.container.setAttribute("aria-label","Text formatting"),[{name:"bold",icon:S,title:"Bold (Ctrl+B)",action:"toggleBold"},{name:"italic",icon:B,title:"Italic (Ctrl+I)",action:"toggleItalic"},{separator:!0},{name:"h1",icon:A,title:"Heading 1",action:"insertH1"},{name:"h2",icon:I,title:"Heading 2",action:"insertH2"},{name:"h3",icon:H,title:"Heading 3",action:"insertH3"},{separator:!0},{name:"link",icon:j,title:"Insert Link (Ctrl+K)",action:"insertLink"},{name:"code",icon:$,title:"Inline Code",action:"toggleCode"},{name:"codeBlock",icon:E,title:"Code Block",action:"insertCodeBlock"},{separator:!0},{name:"bulletList",icon:z,title:"Bullet List",action:"toggleBulletList"},{name:"orderedList",icon:M,title:"Numbered List",action:"toggleNumberedList"}].forEach(r=>{if(r.separator){let o=document.createElement("div");o.className="overtype-toolbar-separator",o.setAttribute("role","separator"),this.container.appendChild(o)}else{let o=this.createButton(r);this.buttons[r.name]=o,this.container.appendChild(o)}});let e=this.editor.element.querySelector(".overtype-wrapper");return e&&this.editor.element.insertBefore(this.container,e),this.container}createButton(t){let e=document.createElement("button");return e.className="overtype-toolbar-button",e.type="button",e.title=t.title,e.setAttribute("aria-label",t.title),e.setAttribute("data-action",t.action),e.innerHTML=t.icon,e.addEventListener("click",r=>{r.preventDefault(),this.handleAction(t.action)}),e}async handleAction(t){let e=this.editor.textarea;if(!e)return;e.focus();let r=window.markdownActions;if(!r){console.error("markdown-actions not available");return}try{switch(t){case"toggleBold":r.toggleBold(e);break;case"toggleItalic":r.toggleItalic(e);break;case"insertH1":r.insertHeader(e,1);break;case"insertH2":r.insertHeader(e,2);break;case"insertH3":r.insertHeader(e,3);break;case"insertLink":r.insertLink(e);break;case"toggleCode":r.toggleCode(e);break;case"insertCodeBlock":r.insertCodeBlock(e);break;case"toggleBulletList":r.toggleBulletList(e);break;case"toggleNumberedList":r.toggleNumberedList(e);break}e.dispatchEvent(new Event("input",{bubbles:!0}))}catch(o){console.error("Error loading markdown-actions:",o)}}async updateButtonStates(){let t=this.editor.textarea;if(!t)return;let e=window.markdownActions;if(e)try{let r=e.getActiveFormats(t);Object.entries(this.buttons).forEach(([o,n])=>{let i=!1;switch(o){case"bold":i=r.includes("bold");break;case"italic":i=r.includes("italic");break;case"code":i=r.includes("code");break;case"bulletList":i=r.includes("bulletList");break;case"orderedList":i=r.includes("orderedList");break;case"h1":i=r.includes("header1");break;case"h2":i=r.includes("header2");break;case"h3":i=r.includes("header3");break}n.classList.toggle("active",i),n.setAttribute("aria-pressed",i.toString())})}catch(r){}}destroy(){this.container&&(this.container.remove(),this.container=null,this.buttons={})}};var s=class s{constructor(t,e={}){let r;if(typeof t=="string"){if(r=document.querySelectorAll(t),r.length===0)throw new Error(`No elements found for selector: ${t}`);r=Array.from(r)}else if(t instanceof Element)r=[t];else if(t instanceof NodeList)r=Array.from(t);else if(Array.isArray(t))r=t;else throw new Error("Invalid target: must be selector string, Element, NodeList, or Array");return r.map(n=>{if(n.overTypeInstance)return n.overTypeInstance.reinit(e),n.overTypeInstance;let i=Object.create(s.prototype);return i._init(n,e),n.overTypeInstance=i,s.instances.set(n,i),i})}_init(t,e={}){this.element=t,this.options=this._mergeOptions(e),this.instanceId=++s.instanceCount,this.initialized=!1,s.injectStyles(),s.initGlobalListeners();let r=t.querySelector(".overtype-wrapper");r?this._recoverFromDOM(r):this._buildFromScratch(),this.shortcuts=new u(this),this.options.toolbar&&(this.toolbar=new g(this),this.toolbar.create(),this.textarea.addEventListener("selectionchange",()=>{this.toolbar.updateButtonStates()}),this.textarea.addEventListener("input",()=>{this.toolbar.updateButtonStates()})),this.initialized=!0,this.options.onChange&&this.options.onChange(this.getValue(),this)}_mergeOptions(t){let e={fontSize:"14px",lineHeight:1.6,fontFamily:"'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace",padding:"16px",mobile:{fontSize:"16px",padding:"12px",lineHeight:1.5},autofocus:!1,placeholder:"Start typing...",value:"",onChange:null,onKeydown:null,showActiveLineRaw:!1,showStats:!1,toolbar:!1,statsFormatter:null},{theme:r,colors:o,...n}=t;return{...e,...n}}_recoverFromDOM(t){if(this.wrapper=t,this.textarea=t.querySelector(".overtype-input"),this.preview=t.querySelector(".overtype-preview"),!this.textarea||!this.preview){t.remove(),this._buildFromScratch();return}this.wrapper._instance=this,this.options.fontSize&&this.wrapper.style.setProperty("--instance-font-size",this.options.fontSize),this.options.lineHeight&&this.wrapper.style.setProperty("--instance-line-height",String(this.options.lineHeight)),this.options.padding&&this.wrapper.style.setProperty("--instance-padding",this.options.padding),this._configureTextarea(),this._applyOptions()}_buildFromScratch(){let t=this._extractContent();this.element.innerHTML="",this._createDOM(),(t||this.options.value)&&this.setValue(t||this.options.value),this._applyOptions()}_extractContent(){let t=this.element.querySelector(".overtype-input");return t?t.value:this.element.textContent||""}_createDOM(){this.wrapper=document.createElement("div"),this.wrapper.className="overtype-wrapper";let t=s.currentTheme||c,e=typeof t=="string"?t:t.name;e&&this.wrapper.setAttribute("data-theme",e),this.options.showStats&&this.wrapper.classList.add("with-stats"),this.options.fontSize&&this.wrapper.style.setProperty("--instance-font-size",this.options.fontSize),this.options.lineHeight&&this.wrapper.style.setProperty("--instance-line-height",String(this.options.lineHeight)),this.options.padding&&this.wrapper.style.setProperty("--instance-padding",this.options.padding),this.wrapper._instance=this,this.textarea=document.createElement("textarea"),this.textarea.className="overtype-input",this.textarea.placeholder=this.options.placeholder,this._configureTextarea(),this.preview=document.createElement("div"),this.preview.className="overtype-preview",this.preview.setAttribute("aria-hidden","true"),this.wrapper.appendChild(this.textarea),this.wrapper.appendChild(this.preview),this.options.showStats&&(this.statsBar=document.createElement("div"),this.statsBar.className="overtype-stats",this.wrapper.appendChild(this.statsBar),this._updateStats()),this.element.appendChild(this.wrapper)}_configureTextarea(){this.textarea.setAttribute("autocomplete","off"),this.textarea.setAttribute("autocorrect","off"),this.textarea.setAttribute("autocapitalize","off"),this.textarea.setAttribute("spellcheck","false"),this.textarea.setAttribute("data-gramm","false"),this.textarea.setAttribute("data-gramm_editor","false"),this.textarea.setAttribute("data-enable-grammarly","false")}_applyOptions(){this.options.autofocus&&this.textarea.focus(),this.updatePreview()}updatePreview(){let t=this.textarea.value,e=this.textarea.selectionStart,r=this._getCurrentLine(t,e),o=m.parse(t,r,this.options.showActiveLineRaw);this.preview.innerHTML=o||'<span style="color: #808080;">Start typing...</span>',this._applyCodeBlockBackgrounds(),this.options.showStats&&this.statsBar&&this._updateStats(),this.options.onChange&&this.initialized&&this.options.onChange(t,this)}_applyCodeBlockBackgrounds(){let t=this.preview.querySelectorAll(".code-fence");for(let e=0;e<t.length-1;e+=2){let r=t[e],o=t[e+1],n=r.parentElement,i=o.parentElement;if(!n||!i)continue;r.style.display="block",o.style.display="block",n.classList.add("code-block-line"),i.classList.add("code-block-line");let l=n.nextElementSibling;for(;l&&l!==i&&(l.tagName==="DIV"&&l.classList.add("code-block-line"),l=l.nextElementSibling,!!l););}}_getCurrentLine(t,e){return t.substring(0,e).split(`
`).length-1}handleInput(t){this.updatePreview()}handleKeydown(t){!this.shortcuts.handleKeydown(t)&&this.options.onKeydown&&this.options.onKeydown(t,this)}handleScroll(t){this.preview.scrollTop=this.textarea.scrollTop,this.preview.scrollLeft=this.textarea.scrollLeft}getValue(){return this.textarea.value}setValue(t){this.textarea.value=t,this.updatePreview()}focus(){this.textarea.focus()}blur(){this.textarea.blur()}isInitialized(){return this.initialized}reinit(t={}){this.options=this._mergeOptions({...this.options,...t}),this._applyOptions(),this.updatePreview()}_updateStats(){if(!this.statsBar)return;let t=this.textarea.value,e=t.split(`
`),r=t.length,o=t.split(/\s+/).filter(b=>b.length>0).length,n=this.textarea.selectionStart,l=t.substring(0,n).split(`
`),d=l.length,v=l[l.length-1].length+1;this.options.statsFormatter?this.statsBar.innerHTML=this.options.statsFormatter({chars:r,words:o,lines:e.length,line:d,column:v}):this.statsBar.innerHTML=`
          <div class="overtype-stat">
            <span class="live-dot"></span>
            <span>${r} chars, ${o} words, ${e.length} lines</span>
          </div>
          <div class="overtype-stat">Line ${d}, Col ${v}</div>
        `}showStats(t){this.options.showStats=t,t&&!this.statsBar?(this.statsBar=document.createElement("div"),this.statsBar.className="overtype-stats",this.wrapper.appendChild(this.statsBar),this.wrapper.classList.add("with-stats"),this._updateStats()):!t&&this.statsBar&&(this.statsBar.remove(),this.statsBar=null,this.wrapper.classList.remove("with-stats"))}destroy(){if(this.element.overTypeInstance=null,s.instances.delete(this.element),this.shortcuts&&this.shortcuts.destroy(),this.wrapper){let t=this.getValue();this.wrapper.remove(),this.element.textContent=t}this.initialized=!1}static init(t,e={}){return new s(t,e)}static getInstance(t){return t.overTypeInstance||s.instances.get(t)||null}static destroyAll(){document.querySelectorAll("[data-overtype-instance]").forEach(e=>{let r=s.getInstance(e);r&&r.destroy()})}static injectStyles(t=!1){if(s.stylesInjected&&!t)return;let e=document.querySelector("style.overtype-styles");e&&e.remove();let r=s.currentTheme||c,o=L({theme:r}),n=document.createElement("style");n.className="overtype-styles",n.textContent=o,document.head.appendChild(n),s.stylesInjected=!0}static setTheme(t,e=null){let r=typeof t=="string"?f(t):t;e&&(r=C(r,e)),s.currentTheme=r,s.injectStyles(!0),document.querySelectorAll(".overtype-wrapper").forEach(o=>{let n=typeof r=="string"?r:r.name;n&&o.setAttribute("data-theme",n);let i=o._instance;i&&i.updatePreview()})}static initGlobalListeners(){s.globalListenersInitialized||(document.addEventListener("input",t=>{if(t.target&&t.target.classList&&t.target.classList.contains("overtype-input")){let e=t.target.closest(".overtype-wrapper"),r=e==null?void 0:e._instance;r&&r.handleInput(t)}}),document.addEventListener("keydown",t=>{if(t.target&&t.target.classList&&t.target.classList.contains("overtype-input")){let e=t.target.closest(".overtype-wrapper"),r=e==null?void 0:e._instance;r&&r.handleKeydown(t)}}),document.addEventListener("scroll",t=>{if(t.target&&t.target.classList&&t.target.classList.contains("overtype-input")){let e=t.target.closest(".overtype-wrapper"),r=e==null?void 0:e._instance;r&&r.handleScroll(t)}},!0),document.addEventListener("selectionchange",t=>{let e=document.activeElement;if(e&&e.classList.contains("overtype-input")){let r=e.closest(".overtype-wrapper"),o=r==null?void 0:r._instance;o&&(o.options.showStats&&o.statsBar&&o._updateStats(),clearTimeout(o._selectionTimeout),o._selectionTimeout=setTimeout(()=>{o.updatePreview()},50))}}),s.globalListenersInitialized=!0)}};h(s,"instances",new WeakMap),h(s,"stylesInjected",!1),h(s,"globalListenersInitialized",!1),h(s,"instanceCount",0);var p=s;p.MarkdownParser=m;p.ShortcutsManager=u;p.themes={solar:c,cave:f("cave")};p.getTheme=f;p.currentTheme=c;var K=p;return F(D);})();
/**
 * OverType - A lightweight markdown editor library with perfect WYSIWYG alignment
 * @version 1.0.0
 * @license MIT
 */
window.OverType = OverType.OverType || OverType.default || OverType;
