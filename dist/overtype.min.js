/**
 * OverType v1.0.0
 * A lightweight markdown editor library with perfect WYSIWYG alignment
 * @license MIT
 * @author Demo User
 * https://github.com/demo/overtype
 */
var OverType=(()=>{var k=Object.defineProperty;var S=(o,t,r)=>t in o?k(o,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[t]=r;var m=(o,t,r)=>(S(o,typeof t!="symbol"?t+"":t,r),r);var h=class{static escapeHtml(t){let r={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};return t.replace(/[&<>"']/g,e=>r[e])}static preserveIndentation(t,r){let n=r.match(/^(\s*)/)[1].replace(/ /g,"&nbsp;");return t.replace(/^\s*/,n)}static parseHeader(t){return t.replace(/^(#{1,3})\s(.+)$/,(r,e,n)=>{let a=e.length;return`<span class="header ${["h1","h2","h3"][a-1]}"><span class="syntax-marker">${e}</span> ${n}</span>`})}static parseHorizontalRule(t){return t.match(/^(-{3,}|\*{3,}|_{3,})$/)?`<div><span class="hr-marker">${t}</span></div>`:null}static parseBlockquote(t){return t.replace(/^&gt; (.+)$/,(r,e)=>`<span class="blockquote"><span class="syntax-marker">&gt;</span> ${e}</span>`)}static parseBulletList(t){return t.replace(/^((?:&nbsp;)*)([-*])\s(.+)$/,(r,e,n,a)=>`${e}<span class="syntax-marker">${n}</span> ${a}`)}static parseNumberedList(t){return t.replace(/^((?:&nbsp;)*)(\d+\.)\s(.+)$/,(r,e,n,a)=>`${e}<span class="syntax-marker">${n}</span> ${a}`)}static parseCodeBlock(t){return t.startsWith("```")?`<div><span class="code-fence">${t}</span></div>`:null}static parseBold(t){return t=t.replace(/\*\*(.+?)\*\*/g,'<strong><span class="syntax-marker">**</span>$1<span class="syntax-marker">**</span></strong>'),t=t.replace(/__(.+?)__/g,'<strong><span class="syntax-marker">__</span>$1<span class="syntax-marker">__</span></strong>'),t}static parseItalic(t){return t=t.replace(new RegExp("(?<!\\*)\\*(?!\\*)(.+?)(?<!\\*)\\*(?!\\*)","g"),'<em><span class="syntax-marker">*</span>$1<span class="syntax-marker">*</span></em>'),t=t.replace(new RegExp("(?<!_)_(?!_)(.+?)(?<!_)_(?!_)","g"),'<em><span class="syntax-marker">_</span>$1<span class="syntax-marker">_</span></em>'),t}static parseInlineCode(t){return t.replace(/`(.+?)`/g,'<code><span class="syntax-marker">`</span>$1<span class="syntax-marker">`</span></code>')}static parseLinks(t){return t.replace(/\[(.+?)\]\((.+?)\)/g,'<a href="$2"><span class="syntax-marker">[</span>$1<span class="syntax-marker">](</span><span class="syntax-marker">$2</span><span class="syntax-marker">)</span></a>')}static parseInlineElements(t){let r=t;return r=this.parseInlineCode(r),r=this.parseLinks(r),r=this.parseBold(r),r=this.parseItalic(r),r}static parseLine(t){let r=this.escapeHtml(t);r=this.preserveIndentation(r,t);let e=this.parseHorizontalRule(r);if(e)return e;let n=this.parseCodeBlock(r);return n||(r=this.parseHeader(r),r=this.parseBlockquote(r),r=this.parseBulletList(r),r=this.parseNumberedList(r),r=this.parseInlineElements(r),r.trim()===""?"<div>&nbsp;</div>":`<div>${r}</div>`)}static parse(t,r=-1,e=!1){return t.split(`
`).map((i,s)=>e&&s===r?`<div class="raw-line">${this.escapeHtml(i)||"&nbsp;"}</div>`:this.parseLine(i)).join("")}};var d=class{constructor(t){this.editor=t,this.textarea=t.textarea,this.shortcuts=new Map,this.registerDefaults()}registerDefaults(){this.register("b",!1,()=>{this.wrapSelection("**")}),this.register("i",!1,()=>{this.wrapSelection("*")}),this.register("8",!0,()=>{this.toggleList("bullet")}),this.register("7",!0,()=>{this.toggleList("number")}),this.register("k",!1,()=>{this.wrapSelection("`")}),this.register("k",!0,()=>{this.insertLink()})}register(t,r,e){let n=`${r?"shift+":""}${t.toLowerCase()}`;this.shortcuts.set(n,e)}handleKeydown(t){if(!(navigator.platform.toLowerCase().includes("mac")?t.metaKey:t.ctrlKey))return!1;let n=`${t.shiftKey?"shift+":""}${t.key.toLowerCase()}`,a=this.shortcuts.get(n);return a?(t.preventDefault(),a.call(this),!0):!1}wrapSelection(t,r=t){let e=this.textarea.selectionStart,n=this.textarea.selectionEnd,i=this.textarea.value.slice(e,n);if(i.startsWith(t)&&i.endsWith(r)&&i.length>=t.length+r.length){let s=i.slice(t.length,i.length-r.length);this.textarea.setRangeText(s,e,n,"end"),this.editor.updatePreview();return}this.textarea.setRangeText(t+i+r,e,n,"end"),this.editor.updatePreview()}toggleList(t){let r=this.textarea.value,e=this.textarea.selectionStart,n=this.textarea.selectionEnd,a=r.lastIndexOf(`
`,e-1)+1,i=r.indexOf(`
`,n)===-1?r.length:r.indexOf(`
`,n),p=r.slice(a,i).split(`
`),c;t==="bullet"?c=p.map(l=>/^\s*[-*]\s+/.test(l)?l.replace(/^(\s*)[-*]\s+/,"$1"):l.replace(/^(\s*)/,"$1- ")).join(`
`):t==="number"&&(c=p.map((l,y)=>/^\s*\d+\.\s+/.test(l)?l.replace(/^(\s*)\d+\.\s+/,"$1"):l.replace(/^(\s*)/,`$1${y+1}. `)).join(`
`)),this.textarea.setRangeText(c,a,i,"end"),this.editor.updatePreview()}insertLink(){let t=this.textarea.selectionStart,r=this.textarea.selectionEnd,e=this.textarea.value.slice(t,r),n=e||"link text",a=`[${n}](url)`;if(this.textarea.setRangeText(a,t,r,"end"),!e)this.textarea.setSelectionRange(t+1,t+1+n.length);else{let i=t+a.indexOf("(url)")+1;this.textarea.setSelectionRange(i,i+3)}this.editor.updatePreview(),this.textarea.focus()}insertHeader(t){let r=this.textarea.value,e=this.textarea.selectionStart,n=r.lastIndexOf(`
`,e-1)+1,a=r.indexOf(`
`,e)===-1?r.length:r.indexOf(`
`,e),i=r.slice(n,a),s=i.match(/^(#{1,3})\s/);if(s)if(s[1].length===t){let p=i.replace(/^#{1,3}\s/,"");this.textarea.setRangeText(p,n,a,"end")}else{let p=i.replace(/^#{1,3}/,"#".repeat(t));this.textarea.setRangeText(p,n,a,"end")}else{let p="#".repeat(t)+" "+i;this.textarea.setRangeText(p,n,a,"end")}this.editor.updatePreview()}destroy(){this.shortcuts.clear()}};var u={name:"solar",colors:{bgPrimary:"#faf0ca",bgSecondary:"#ffffff",text:"#0d3b66",h1:"#f95738",h2:"#ee964b",h3:"#3d8a51",strong:"#ee964b",em:"#f95738",link:"#0d3b66",code:"#0d3b66",codeBg:"rgba(244, 211, 94, 0.2)",blockquote:"#5a7a9b",hr:"#5a7a9b",syntaxMarker:"rgba(13, 59, 102, 0.52)",cursor:"#f95738",selection:"rgba(244, 211, 94, 0.4)",listMarker:"#ee964b"}},g={name:"cave",colors:{bgPrimary:"#141E26",bgSecondary:"#1D2D3E",text:"#c5dde8",h1:"#d4a5ff",h2:"#f6ae2d",h3:"#9fcfec",strong:"#f6ae2d",em:"#9fcfec",link:"#9fcfec",code:"#c5dde8",codeBg:"#1a232b",blockquote:"#9fcfec",hr:"#c5dde8",syntaxMarker:"rgba(159, 207, 236, 0.73)",cursor:"#f26419",selection:"rgba(51, 101, 138, 0.4)",listMarker:"#f6ae2d"}},w={solar:u,cave:g,light:u,dark:g};function v(o){return typeof o=="string"?w[o]||w.solar:o}function x(o){let t=[];for(let[r,e]of Object.entries(o)){let n=r.replace(/([A-Z])/g,"-$1").toLowerCase();t.push(`--${n}: ${e};`)}return t.join(`
`)}function f(o,t={}){return{...o,colors:{...o.colors,...t}}}function b(o={}){let{fontSize:t="14px",lineHeight:r=1.6,fontFamily:e="'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace",padding:n="20px",theme:a=null,mobile:i={}}=o,s=Object.keys(i).length>0?`
    @media (max-width: 640px) {
      .overtype-wrapper .overtype-input,
      .overtype-wrapper .overtype-preview {
        ${Object.entries(i).map(([c,l])=>`${c.replace(/([A-Z])/g,"-$1").toLowerCase()}: ${l} !important;`).join(`
        `)}
      }
    }
  `:"",p=a&&a.colors?x(a.colors):"";return`
    /* OverType Editor Styles */
    .overtype-wrapper {
      position: relative !important;
      width: 100% !important;
      height: 100% !important;
      overflow: hidden !important;
      ${p?`
      /* Theme Variables */
      ${p}`:""}
    }

    /* Critical alignment styles - must be identical for both layers */
    .overtype-wrapper .overtype-input,
    .overtype-wrapper .overtype-preview {
      /* Positioning - must be identical */
      position: absolute !important;
      top: 0 !important;
      left: 0 !important;
      width: 100% !important;
      height: 100% !important;
      
      /* Font properties - any difference breaks alignment */
      font-family: ${e} !important;
      font-size: ${t} !important;
      line-height: ${r} !important;
      font-weight: normal !important;
      font-style: normal !important;
      font-variant: normal !important;
      font-stretch: normal !important;
      font-kerning: none !important;
      font-feature-settings: normal !important;
      
      /* Box model - must match exactly */
      padding: ${n} !important;
      margin: 0 !important;
      border: none !important;
      outline: none !important;
      box-sizing: border-box !important;
      
      /* Text layout - critical for character positioning */
      white-space: pre-wrap !important;
      word-wrap: break-word !important;
      word-break: normal !important;
      overflow-wrap: break-word !important;
      tab-size: 2 !important;
      -moz-tab-size: 2 !important;
      text-align: left !important;
      text-indent: 0 !important;
      letter-spacing: normal !important;
      word-spacing: normal !important;
      
      /* Text rendering */
      text-transform: none !important;
      text-rendering: auto !important;
      -webkit-font-smoothing: auto !important;
      -webkit-text-size-adjust: 100% !important;
      
      /* Direction and writing */
      direction: ltr !important;
      writing-mode: horizontal-tb !important;
      unicode-bidi: normal !important;
      text-orientation: mixed !important;
      
      /* Visual effects that could shift perception */
      text-shadow: none !important;
      filter: none !important;
      transform: none !important;
      zoom: 1 !important;
      
      /* Vertical alignment */
      vertical-align: baseline !important;
      
      /* Size constraints */
      min-width: 0 !important;
      min-height: 0 !important;
      max-width: none !important;
      max-height: none !important;
      
      /* Overflow */
      overflow-y: auto !important;
      overflow-x: auto !important;
      scrollbar-width: auto !important;
      scrollbar-gutter: auto !important;
      
      /* Animation/transition - disabled to prevent movement */
      animation: none !important;
      transition: none !important;
    }

    /* Input layer styles */
    .overtype-wrapper .overtype-input {
      /* Layer positioning */
      z-index: 1 !important;
      
      /* Text visibility */
      color: transparent !important;
      caret-color: var(--cursor, #f95738) !important;
      background-color: transparent !important;
      
      /* Textarea-specific */
      resize: none !important;
      appearance: none !important;
      -webkit-appearance: none !important;
      -moz-appearance: none !important;
      
      /* Prevent mobile zoom on focus */
      touch-action: manipulation !important;
      
      /* Disable autofill and spellcheck */
      autocomplete: off !important;
      autocorrect: off !important;
      autocapitalize: off !important;
      spellcheck: false !important;
    }

    .overtype-wrapper .overtype-input::selection {
      background-color: var(--selection, rgba(244, 211, 94, 0.4));
    }

    /* Preview layer styles */
    .overtype-wrapper .overtype-preview {
      /* Layer positioning */
      z-index: 0 !important;
      pointer-events: none !important;
      color: var(--text, #0d3b66) !important;
      background-color: transparent !important;
      
      /* Prevent text selection */
      user-select: none !important;
      -webkit-user-select: none !important;
      -moz-user-select: none !important;
      -ms-user-select: none !important;
    }

    /* Defensive styles for preview child divs */
    .overtype-wrapper .overtype-preview div {
      /* Reset any inherited styles */
      margin: 0 !important;
      padding: 0 !important;
      border: none !important;
      text-align: left !important;
      text-indent: 0 !important;
      display: block !important;
      position: static !important;
      transform: none !important;
      min-height: 0 !important;
      max-height: none !important;
      line-height: inherit !important;
      font-size: inherit !important;
      font-family: inherit !important;
    }

    /* Markdown element styling - NO SIZE CHANGES */
    .overtype-wrapper .overtype-preview .header {
      font-weight: bold !important;
    }

    /* Header colors */
    .overtype-wrapper .overtype-preview .h1 { 
      color: var(--h1, #f95738) !important; 
    }
    .overtype-wrapper .overtype-preview .h2 { 
      color: var(--h2, #ee964b) !important; 
    }
    .overtype-wrapper .overtype-preview .h3 { 
      color: var(--h3, #3d8a51) !important; 
    }

    /* Bold text */
    .overtype-wrapper .overtype-preview strong {
      color: var(--strong, #ee964b) !important;
      font-weight: bold !important;
    }

    /* Italic text - using underline instead of slant */
    .overtype-wrapper .overtype-preview em {
      color: var(--em, #f95738) !important;
      text-decoration: underline !important;
      text-decoration-color: var(--em, #f95738) !important;
      text-decoration-thickness: 1px !important;
      font-style: normal !important;
    }

    /* Inline code */
    .overtype-wrapper .overtype-preview code {
      background: var(--code-bg, rgba(244, 211, 94, 0.2)) !important;
      color: var(--code, #0d3b66) !important;
      padding: 0 !important;
      border-radius: 2px !important;
      font-family: inherit !important;
      font-weight: normal !important;
    }

    /* Code blocks */
    .overtype-wrapper .overtype-preview pre {
      background: #1e1e1e !important;
      padding: 0 !important;
      margin: 0 !important;
      border-radius: 4px !important;
      overflow-x: auto !important;
    }

    .overtype-wrapper .overtype-preview pre code {
      background: none !important;
    }

    /* Blockquotes */
    .overtype-wrapper .overtype-preview .blockquote {
      color: var(--blockquote, #5a7a9b) !important;
      padding: 0 !important;
      margin: 0 !important;
      border: none !important;
    }

    /* Links */
    .overtype-wrapper .overtype-preview a {
      color: var(--link, #0d3b66) !important;
      text-decoration: underline !important;
      font-weight: normal !important;
    }

    .overtype-wrapper .overtype-preview a:hover {
      text-decoration: underline !important;
      color: var(--link, #0d3b66) !important;
    }

    /* Lists - no list styling */
    .overtype-wrapper .overtype-preview ul,
    .overtype-wrapper .overtype-preview ol {
      list-style: none !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    .overtype-wrapper .overtype-preview li {
      margin: 0 !important;
      padding: 0 !important;
      list-style: none !important;
    }

    /* Horizontal rules */
    .overtype-wrapper .overtype-preview hr {
      border: none !important;
      color: var(--hr, #5a7a9b) !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    .overtype-wrapper .overtype-preview .hr-marker {
      color: var(--hr, #5a7a9b) !important;
      opacity: 0.6 !important;
    }

    /* Code fence markers */
    .overtype-wrapper .overtype-preview .code-fence {
      color: var(--code, #0d3b66) !important;
      background: var(--code-bg, rgba(244, 211, 94, 0.2)) !important;
    }

    /* Raw markdown line */
    .overtype-wrapper .overtype-preview .raw-line {
      color: var(--raw-line, #5a7a9b) !important;
      font-style: normal !important;
      font-weight: normal !important;
    }

    /* Syntax markers */
    .overtype-wrapper .overtype-preview .syntax-marker {
      color: var(--syntax-marker, rgba(13, 59, 102, 0.52)) !important;
      opacity: 0.7 !important;
    }

    /* List markers */
    .overtype-wrapper .overtype-preview .list-marker {
      color: var(--list-marker, #ee964b) !important;
    }

    ${s}
  `}(function(o,t){typeof define=="function"&&define.amd?define([],t):typeof module=="object"&&module.exports?module.exports=t():o.OverType=t()})(typeof self<"u"?self:void 0,function(){"use strict";let t=class t{constructor(e,n={}){let a;if(typeof e=="string"){if(a=document.querySelectorAll(e),a.length===0)throw new Error(`No elements found for selector: ${e}`);a=Array.from(a)}else if(e instanceof Element)a=[e];else if(e instanceof NodeList)a=Array.from(e);else if(Array.isArray(e))a=e;else throw new Error("Invalid target: must be selector string, Element, NodeList, or Array");return a.map(s=>{if(s.overTypeInstance)return s.overTypeInstance.reinit(n),s.overTypeInstance;let p=Object.create(t.prototype);return p._init(s,n),s.overTypeInstance=p,t.instances.set(s,p),p})}_init(e,n={}){this.element=e,this.options=this._mergeOptions(n),this.instanceId=++t.instanceCount,this.initialized=!1,t.injectStyles(this.options),t.initGlobalListeners();let a=e.querySelector(".overtype-wrapper");a?this._recoverFromDOM(a):this._buildFromScratch(),this.shortcuts=new d(this),this.initialized=!0,this.options.onChange&&this.options.onChange(this.getValue(),this)}_mergeOptions(e){let n={fontSize:"14px",lineHeight:1.6,fontFamily:"'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace",padding:"16px",theme:"solar",mobile:{fontSize:"16px",padding:"12px",lineHeight:1.5},autofocus:!1,placeholder:"Start typing...",value:"",onChange:null,onKeydown:null,showActiveLineRaw:!1},a=e.theme||n.theme;return typeof a=="string"&&(a=v(a)),e.colors&&(a=f(a||u,e.colors)),{...n,...e,theme:a}}_recoverFromDOM(e){if(this.wrapper=e,this.textarea=e.querySelector(".overtype-input"),this.preview=e.querySelector(".overtype-preview"),!this.textarea||!this.preview){e.remove(),this._buildFromScratch();return}this.wrapper._instance=this,this._configureTextarea(),this._applyOptions()}_buildFromScratch(){let e=this._extractContent();this.element.innerHTML="",this._createDOM(),(e||this.options.value)&&this.setValue(e||this.options.value),this._applyOptions()}_extractContent(){let e=this.element.querySelector(".overtype-input");return e?e.value:this.element.textContent||""}_createDOM(){this.wrapper=document.createElement("div"),this.wrapper.className="overtype-wrapper",this.wrapper._instance=this,this.textarea=document.createElement("textarea"),this.textarea.className="overtype-input",this.textarea.placeholder=this.options.placeholder,this._configureTextarea(),this.preview=document.createElement("div"),this.preview.className="overtype-preview",this.preview.setAttribute("aria-hidden","true"),this.wrapper.appendChild(this.textarea),this.wrapper.appendChild(this.preview),this.element.appendChild(this.wrapper)}_configureTextarea(){this.textarea.setAttribute("autocomplete","off"),this.textarea.setAttribute("autocorrect","off"),this.textarea.setAttribute("autocapitalize","off"),this.textarea.setAttribute("spellcheck","false"),this.textarea.setAttribute("data-gramm","false"),this.textarea.setAttribute("data-gramm_editor","false"),this.textarea.setAttribute("data-enable-grammarly","false")}_applyOptions(){this.options.autofocus&&this.textarea.focus(),this.updatePreview()}updatePreview(){let e=this.textarea.value,n=this.textarea.selectionStart,a=this._getCurrentLine(e,n),i=h.parse(e,a,this.options.showActiveLineRaw);this.preview.innerHTML=i||'<span style="color: #808080;">Start typing...</span>',this.options.onChange&&this.initialized&&this.options.onChange(e,this)}_getCurrentLine(e,n){return e.substring(0,n).split(`
`).length-1}handleInput(e){this.updatePreview()}handleKeydown(e){!this.shortcuts.handleKeydown(e)&&this.options.onKeydown&&this.options.onKeydown(e,this)}handleScroll(e){this.preview.scrollTop=this.textarea.scrollTop,this.preview.scrollLeft=this.textarea.scrollLeft}getValue(){return this.textarea.value}setValue(e){this.textarea.value=e,this.updatePreview()}setTheme(e){this.options.theme=typeof e=="string"?v(e):e,t.injectStyles(this.options,!0),this.updatePreview()}focus(){this.textarea.focus()}blur(){this.textarea.blur()}isInitialized(){return this.initialized}reinit(e={}){this.options=this._mergeOptions({...this.options,...e}),this._applyOptions(),this.updatePreview()}destroy(){if(this.element.overTypeInstance=null,t.instances.delete(this.element),this.shortcuts&&this.shortcuts.destroy(),this.wrapper){let e=this.getValue();this.wrapper.remove(),this.element.textContent=e}this.initialized=!1}static init(e,n={}){return new t(e,n)}static getInstance(e){return e.overTypeInstance||t.instances.get(e)||null}static destroyAll(){document.querySelectorAll("[data-overtype-instance]").forEach(n=>{let a=t.getInstance(n);a&&a.destroy()})}static injectStyles(e={},n=!1){if(t.stylesInjected&&!n)return;let a=document.querySelector("style.overtype-styles");a&&a.remove();let i=b(e),s=document.createElement("style");s.className="overtype-styles",s.textContent=i,document.head.appendChild(s),t.stylesInjected=!0}static initGlobalListeners(){t.globalListenersInitialized||(document.addEventListener("input",e=>{if(e.target.classList.contains("overtype-input")){let n=e.target.closest(".overtype-wrapper"),a=n==null?void 0:n._instance;a&&a.handleInput(e)}}),document.addEventListener("keydown",e=>{if(e.target.classList.contains("overtype-input")){let n=e.target.closest(".overtype-wrapper"),a=n==null?void 0:n._instance;a&&a.handleKeydown(e)}}),document.addEventListener("scroll",e=>{if(e.target.classList.contains("overtype-input")){let n=e.target.closest(".overtype-wrapper"),a=n==null?void 0:n._instance;a&&a.handleScroll(e)}},!0),document.addEventListener("selectionchange",e=>{let n=document.activeElement;if(n&&n.classList.contains("overtype-input")){let a=n.closest(".overtype-wrapper"),i=a==null?void 0:a._instance;i&&(clearTimeout(i._selectionTimeout),i._selectionTimeout=setTimeout(()=>{i.updatePreview()},50))}}),t.globalListenersInitialized=!0)}};m(t,"instances",new WeakMap),m(t,"stylesInjected",!1),m(t,"globalListenersInitialized",!1),m(t,"instanceCount",0);let o=t;return o.MarkdownParser=h,o.ShortcutsManager=d,o.themes={solar:u,cave:v("cave")},o.getTheme=v,o.mergeTheme=f,o});})();
/**
 * OverType - A lightweight markdown editor library with perfect WYSIWYG alignment
 * @version 1.0.0
 * @license MIT
 */
if(typeof module!=="undefined")module.exports=OverType;
