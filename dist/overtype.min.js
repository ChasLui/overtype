/**
 * OverType v1.0.0
 * A lightweight markdown editor library with perfect WYSIWYG alignment
 * @license MIT
 * @author Demo User
 * https://github.com/demo/overtype
 */
var OverType=(()=>{var g=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var z=(o,t,e)=>t in o?g(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var I=(o,t)=>{for(var e in t)g(o,e,{get:t[e],enumerable:!0})},_=(o,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of C(t))!T.call(o,n)&&n!==e&&g(o,n,{get:()=>t[n],enumerable:!(r=$(t,n))||r.enumerable});return o};var E=o=>_(g({},"__esModule",{value:!0}),o);var d=(o,t,e)=>(z(o,typeof t!="symbol"?t+"":t,e),e);var A={};I(A,{OverType:()=>m,default:()=>M});var u=class{static escapeHtml(t){let e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};return t.replace(/[&<>"']/g,r=>e[r])}static preserveIndentation(t,e){let n=e.match(/^(\s*)/)[1].replace(/ /g,"&nbsp;");return t.replace(/^\s*/,n)}static parseHeader(t){return t.replace(/^(#{1,3})\s(.+)$/,(e,r,n)=>{let a=r.length;return`<span class="header ${["h1","h2","h3"][a-1]}"><span class="syntax-marker">${r}</span> ${n}</span>`})}static parseHorizontalRule(t){return t.match(/^(-{3,}|\*{3,}|_{3,})$/)?`<div><span class="hr-marker">${t}</span></div>`:null}static parseBlockquote(t){return t.replace(/^&gt; (.+)$/,(e,r)=>`<span class="blockquote"><span class="syntax-marker">&gt;</span> ${r}</span>`)}static parseBulletList(t){return t.replace(/^((?:&nbsp;)*)([-*])\s(.+)$/,(e,r,n,a)=>`${r}<span class="syntax-marker">${n}</span> ${a}`)}static parseNumberedList(t){return t.replace(/^((?:&nbsp;)*)(\d+\.)\s(.+)$/,(e,r,n,a)=>`${r}<span class="syntax-marker">${n}</span> ${a}`)}static parseCodeBlock(t){return t.startsWith("```")?`<div><span class="code-fence">${t}</span></div>`:null}static parseBold(t){return t=t.replace(/\*\*(.+?)\*\*/g,'<strong><span class="syntax-marker">**</span>$1<span class="syntax-marker">**</span></strong>'),t=t.replace(/__(.+?)__/g,'<strong><span class="syntax-marker">__</span>$1<span class="syntax-marker">__</span></strong>'),t}static parseItalic(t){return t=t.replace(new RegExp("(?<!\\*)\\*(?!\\*)(.+?)(?<!\\*)\\*(?!\\*)","g"),'<em><span class="syntax-marker">*</span>$1<span class="syntax-marker">*</span></em>'),t=t.replace(new RegExp("(?<!_)_(?!_)(.+?)(?<!_)_(?!_)","g"),'<em><span class="syntax-marker">_</span>$1<span class="syntax-marker">_</span></em>'),t}static parseInlineCode(t){return t.replace(/`(.+?)`/g,'<code><span class="syntax-marker">`</span>$1<span class="syntax-marker">`</span></code>')}static parseLinks(t){return t.replace(/\[(.+?)\]\((.+?)\)/g,'<a href="$2"><span class="syntax-marker">[</span>$1<span class="syntax-marker">](</span><span class="syntax-marker">$2</span><span class="syntax-marker">)</span></a>')}static parseInlineElements(t){let e=t;return e=this.parseInlineCode(e),e=this.parseLinks(e),e=this.parseBold(e),e=this.parseItalic(e),e}static parseLine(t){let e=this.escapeHtml(t);e=this.preserveIndentation(e,t);let r=this.parseHorizontalRule(e);if(r)return r;let n=this.parseCodeBlock(e);return n||(e=this.parseHeader(e),e=this.parseBlockquote(e),e=this.parseBulletList(e),e=this.parseNumberedList(e),e=this.parseInlineElements(e),e.trim()===""?"<div>&nbsp;</div>":`<div>${e}</div>`)}static parse(t,e=-1,r=!1){return t.split(`
`).map((i,l)=>r&&l===e?`<div class="raw-line">${this.escapeHtml(i)||"&nbsp;"}</div>`:this.parseLine(i)).join("")}};var v=class{constructor(t){this.editor=t,this.textarea=t.textarea,this.shortcuts=new Map,this.registerDefaults()}registerDefaults(){this.register("b",!1,()=>{this.wrapSelection("**")}),this.register("i",!1,()=>{this.wrapSelection("*")}),this.register("8",!0,()=>{this.toggleList("bullet")}),this.register("7",!0,()=>{this.toggleList("number")}),this.register("k",!1,()=>{this.wrapSelection("`")}),this.register("k",!0,()=>{this.insertLink()})}register(t,e,r){let n=`${e?"shift+":""}${t.toLowerCase()}`;this.shortcuts.set(n,r)}handleKeydown(t){if(!(navigator.platform.toLowerCase().includes("mac")?t.metaKey:t.ctrlKey))return!1;let n=`${t.shiftKey?"shift+":""}${t.key.toLowerCase()}`,a=this.shortcuts.get(n);return a?(t.preventDefault(),a.call(this),!0):!1}wrapSelection(t,e=t){let r=this.textarea.selectionStart,n=this.textarea.selectionEnd,i=this.textarea.value.slice(r,n);if(i.startsWith(t)&&i.endsWith(e)&&i.length>=t.length+e.length){let l=i.slice(t.length,i.length-e.length);this.textarea.setRangeText(l,r,n,"end"),this.editor.updatePreview();return}this.textarea.setRangeText(t+i+e,r,n,"end"),this.editor.updatePreview()}toggleList(t){let e=this.textarea.value,r=this.textarea.selectionStart,n=this.textarea.selectionEnd,a=e.lastIndexOf(`
`,r-1)+1,i=e.indexOf(`
`,n)===-1?e.length:e.indexOf(`
`,n),p=e.slice(a,i).split(`
`),h;t==="bullet"?h=p.map(c=>/^\s*[-*]\s+/.test(c)?c.replace(/^(\s*)[-*]\s+/,"$1"):c.replace(/^(\s*)/,"$1- ")).join(`
`):t==="number"&&(h=p.map((c,x)=>/^\s*\d+\.\s+/.test(c)?c.replace(/^(\s*)\d+\.\s+/,"$1"):c.replace(/^(\s*)/,`$1${x+1}. `)).join(`
`)),this.textarea.setRangeText(h,a,i,"end"),this.editor.updatePreview()}insertLink(){let t=this.textarea.selectionStart,e=this.textarea.selectionEnd,r=this.textarea.value.slice(t,e),n=r||"link text",a=`[${n}](url)`;if(this.textarea.setRangeText(a,t,e,"end"),!r)this.textarea.setSelectionRange(t+1,t+1+n.length);else{let i=t+a.indexOf("(url)")+1;this.textarea.setSelectionRange(i,i+3)}this.editor.updatePreview(),this.textarea.focus()}insertHeader(t){let e=this.textarea.value,r=this.textarea.selectionStart,n=e.lastIndexOf(`
`,r-1)+1,a=e.indexOf(`
`,r)===-1?e.length:e.indexOf(`
`,r),i=e.slice(n,a),l=i.match(/^(#{1,3})\s/);if(l)if(l[1].length===t){let p=i.replace(/^#{1,3}\s/,"");this.textarea.setRangeText(p,n,a,"end")}else{let p=i.replace(/^#{1,3}/,"#".repeat(t));this.textarea.setRangeText(p,n,a,"end")}else{let p="#".repeat(t)+" "+i;this.textarea.setRangeText(p,n,a,"end")}this.editor.updatePreview()}destroy(){this.shortcuts.clear()}};var f={name:"solar",colors:{bgPrimary:"#faf0ca",bgSecondary:"#ffffff",text:"#0d3b66",h1:"#f95738",h2:"#ee964b",h3:"#3d8a51",strong:"#ee964b",em:"#f95738",link:"#0d3b66",code:"#0d3b66",codeBg:"rgba(244, 211, 94, 0.2)",blockquote:"#5a7a9b",hr:"#5a7a9b",syntaxMarker:"rgba(13, 59, 102, 0.52)",cursor:"#f95738",selection:"rgba(244, 211, 94, 0.4)",listMarker:"#ee964b"}},b={name:"cave",colors:{bgPrimary:"#141E26",bgSecondary:"#1D2D3E",text:"#c5dde8",h1:"#d4a5ff",h2:"#f6ae2d",h3:"#9fcfec",strong:"#f6ae2d",em:"#9fcfec",link:"#9fcfec",code:"#c5dde8",codeBg:"#1a232b",blockquote:"#9fcfec",hr:"#c5dde8",syntaxMarker:"rgba(159, 207, 236, 0.73)",cursor:"#f26419",selection:"rgba(51, 101, 138, 0.4)",listMarker:"#f6ae2d"}},k={solar:f,cave:b,light:f,dark:b};function y(o){return typeof o=="string"?k[o]||k.solar:o}function S(o){let t=[];for(let[e,r]of Object.entries(o)){let n=e.replace(/([A-Z])/g,"-$1").toLowerCase();t.push(`--${n}: ${r};`)}return t.join(`
`)}function w(o,t={}){return{...o,colors:{...o.colors,...t}}}function L(o={}){let{fontSize:t="14px",lineHeight:e=1.6,fontFamily:r="'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace",padding:n="20px",theme:a=null,mobile:i={}}=o,l=Object.keys(i).length>0?`
    @media (max-width: 640px) {
      .overtype-wrapper .overtype-input,
      .overtype-wrapper .overtype-preview {
        ${Object.entries(i).map(([h,c])=>`${h.replace(/([A-Z])/g,"-$1").toLowerCase()}: ${c} !important;`).join(`
        `)}
      }
    }
  `:"",p=a&&a.colors?S(a.colors):"";return`
    /* OverType Editor Styles */
    .overtype-wrapper {
      position: relative !important;
      width: 100% !important;
      height: 100% !important;
      overflow: hidden !important;
      ${p?`
      /* Theme Variables */
      ${p}`:""}
    }

    /* Critical alignment styles - must be identical for both layers */
    .overtype-wrapper .overtype-input,
    .overtype-wrapper .overtype-preview {
      /* Positioning - must be identical */
      position: absolute !important;
      top: 0 !important;
      left: 0 !important;
      width: 100% !important;
      height: 100% !important;
      
      /* Font properties - any difference breaks alignment */
      font-family: ${r} !important;
      font-size: ${t} !important;
      line-height: ${e} !important;
      font-weight: normal !important;
      font-style: normal !important;
      font-variant: normal !important;
      font-stretch: normal !important;
      font-kerning: none !important;
      font-feature-settings: normal !important;
      
      /* Box model - must match exactly */
      padding: ${n} !important;
      margin: 0 !important;
      border: none !important;
      outline: none !important;
      box-sizing: border-box !important;
      
      /* Text layout - critical for character positioning */
      white-space: pre-wrap !important;
      word-wrap: break-word !important;
      word-break: normal !important;
      overflow-wrap: break-word !important;
      tab-size: 2 !important;
      -moz-tab-size: 2 !important;
      text-align: left !important;
      text-indent: 0 !important;
      letter-spacing: normal !important;
      word-spacing: normal !important;
      
      /* Text rendering */
      text-transform: none !important;
      text-rendering: auto !important;
      -webkit-font-smoothing: auto !important;
      -webkit-text-size-adjust: 100% !important;
      
      /* Direction and writing */
      direction: ltr !important;
      writing-mode: horizontal-tb !important;
      unicode-bidi: normal !important;
      text-orientation: mixed !important;
      
      /* Visual effects that could shift perception */
      text-shadow: none !important;
      filter: none !important;
      transform: none !important;
      zoom: 1 !important;
      
      /* Vertical alignment */
      vertical-align: baseline !important;
      
      /* Size constraints */
      min-width: 0 !important;
      min-height: 0 !important;
      max-width: none !important;
      max-height: none !important;
      
      /* Overflow */
      overflow-y: auto !important;
      overflow-x: auto !important;
      scrollbar-width: auto !important;
      scrollbar-gutter: auto !important;
      
      /* Animation/transition - disabled to prevent movement */
      animation: none !important;
      transition: none !important;
    }

    /* Input layer styles */
    .overtype-wrapper .overtype-input {
      /* Layer positioning */
      z-index: 1 !important;
      
      /* Text visibility */
      color: transparent !important;
      caret-color: var(--cursor, #f95738) !important;
      background-color: transparent !important;
      
      /* Textarea-specific */
      resize: none !important;
      appearance: none !important;
      -webkit-appearance: none !important;
      -moz-appearance: none !important;
      
      /* Prevent mobile zoom on focus */
      touch-action: manipulation !important;
      
      /* Disable autofill and spellcheck */
      autocomplete: off !important;
      autocorrect: off !important;
      autocapitalize: off !important;
      spellcheck: false !important;
    }

    .overtype-wrapper .overtype-input::selection {
      background-color: var(--selection, rgba(244, 211, 94, 0.4));
    }

    /* Preview layer styles */
    .overtype-wrapper .overtype-preview {
      /* Layer positioning */
      z-index: 0 !important;
      pointer-events: none !important;
      color: var(--text, #0d3b66) !important;
      background-color: transparent !important;
      
      /* Prevent text selection */
      user-select: none !important;
      -webkit-user-select: none !important;
      -moz-user-select: none !important;
      -ms-user-select: none !important;
    }

    /* Defensive styles for preview child divs */
    .overtype-wrapper .overtype-preview div {
      /* Reset any inherited styles */
      margin: 0 !important;
      padding: 0 !important;
      border: none !important;
      text-align: left !important;
      text-indent: 0 !important;
      display: block !important;
      position: static !important;
      transform: none !important;
      min-height: 0 !important;
      max-height: none !important;
      line-height: inherit !important;
      font-size: inherit !important;
      font-family: inherit !important;
    }

    /* Markdown element styling - NO SIZE CHANGES */
    .overtype-wrapper .overtype-preview .header {
      font-weight: bold !important;
    }

    /* Header colors */
    .overtype-wrapper .overtype-preview .h1 { 
      color: var(--h1, #f95738) !important; 
    }
    .overtype-wrapper .overtype-preview .h2 { 
      color: var(--h2, #ee964b) !important; 
    }
    .overtype-wrapper .overtype-preview .h3 { 
      color: var(--h3, #3d8a51) !important; 
    }

    /* Bold text */
    .overtype-wrapper .overtype-preview strong {
      color: var(--strong, #ee964b) !important;
      font-weight: bold !important;
    }

    /* Italic text - using underline instead of slant */
    .overtype-wrapper .overtype-preview em {
      color: var(--em, #f95738) !important;
      text-decoration: underline !important;
      text-decoration-color: var(--em, #f95738) !important;
      text-decoration-thickness: 1px !important;
      font-style: normal !important;
    }

    /* Inline code */
    .overtype-wrapper .overtype-preview code {
      background: var(--code-bg, rgba(244, 211, 94, 0.2)) !important;
      color: var(--code, #0d3b66) !important;
      padding: 0 !important;
      border-radius: 2px !important;
      font-family: inherit !important;
      font-weight: normal !important;
    }

    /* Code blocks */
    .overtype-wrapper .overtype-preview pre {
      background: #1e1e1e !important;
      padding: 0 !important;
      margin: 0 !important;
      border-radius: 4px !important;
      overflow-x: auto !important;
    }

    .overtype-wrapper .overtype-preview pre code {
      background: none !important;
    }

    /* Blockquotes */
    .overtype-wrapper .overtype-preview .blockquote {
      color: var(--blockquote, #5a7a9b) !important;
      padding: 0 !important;
      margin: 0 !important;
      border: none !important;
    }

    /* Links */
    .overtype-wrapper .overtype-preview a {
      color: var(--link, #0d3b66) !important;
      text-decoration: underline !important;
      font-weight: normal !important;
    }

    .overtype-wrapper .overtype-preview a:hover {
      text-decoration: underline !important;
      color: var(--link, #0d3b66) !important;
    }

    /* Lists - no list styling */
    .overtype-wrapper .overtype-preview ul,
    .overtype-wrapper .overtype-preview ol {
      list-style: none !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    .overtype-wrapper .overtype-preview li {
      margin: 0 !important;
      padding: 0 !important;
      list-style: none !important;
    }

    /* Horizontal rules */
    .overtype-wrapper .overtype-preview hr {
      border: none !important;
      color: var(--hr, #5a7a9b) !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    .overtype-wrapper .overtype-preview .hr-marker {
      color: var(--hr, #5a7a9b) !important;
      opacity: 0.6 !important;
    }

    /* Code fence markers */
    .overtype-wrapper .overtype-preview .code-fence {
      color: var(--code, #0d3b66) !important;
      background: var(--code-bg, rgba(244, 211, 94, 0.2)) !important;
    }

    /* Raw markdown line */
    .overtype-wrapper .overtype-preview .raw-line {
      color: var(--raw-line, #5a7a9b) !important;
      font-style: normal !important;
      font-weight: normal !important;
    }

    /* Syntax markers */
    .overtype-wrapper .overtype-preview .syntax-marker {
      color: var(--syntax-marker, rgba(13, 59, 102, 0.52)) !important;
      opacity: 0.7 !important;
    }

    /* List markers */
    .overtype-wrapper .overtype-preview .list-marker {
      color: var(--list-marker, #ee964b) !important;
    }

    ${l}
  `}var s=class s{constructor(t,e={}){let r;if(typeof t=="string"){if(r=document.querySelectorAll(t),r.length===0)throw new Error(`No elements found for selector: ${t}`);r=Array.from(r)}else if(t instanceof Element)r=[t];else if(t instanceof NodeList)r=Array.from(t);else if(Array.isArray(t))r=t;else throw new Error("Invalid target: must be selector string, Element, NodeList, or Array");return r.map(a=>{if(a.overTypeInstance)return a.overTypeInstance.reinit(e),a.overTypeInstance;let i=Object.create(s.prototype);return i._init(a,e),a.overTypeInstance=i,s.instances.set(a,i),i})}_init(t,e={}){this.element=t,this.options=this._mergeOptions(e),this.instanceId=++s.instanceCount,this.initialized=!1,s.injectStyles(this.options),s.initGlobalListeners();let r=t.querySelector(".overtype-wrapper");r?this._recoverFromDOM(r):this._buildFromScratch(),this.shortcuts=new v(this),this.initialized=!0,this.options.onChange&&this.options.onChange(this.getValue(),this)}_mergeOptions(t){let e={fontSize:"14px",lineHeight:1.6,fontFamily:"'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace",padding:"16px",theme:"solar",mobile:{fontSize:"16px",padding:"12px",lineHeight:1.5},autofocus:!1,placeholder:"Start typing...",value:"",onChange:null,onKeydown:null,showActiveLineRaw:!1},r=t.theme||e.theme;return typeof r=="string"&&(r=y(r)),t.colors&&(r=w(r||f,t.colors)),{...e,...t,theme:r}}_recoverFromDOM(t){if(this.wrapper=t,this.textarea=t.querySelector(".overtype-input"),this.preview=t.querySelector(".overtype-preview"),!this.textarea||!this.preview){t.remove(),this._buildFromScratch();return}this.wrapper._instance=this,this._configureTextarea(),this._applyOptions()}_buildFromScratch(){let t=this._extractContent();this.element.innerHTML="",this._createDOM(),(t||this.options.value)&&this.setValue(t||this.options.value),this._applyOptions()}_extractContent(){let t=this.element.querySelector(".overtype-input");return t?t.value:this.element.textContent||""}_createDOM(){this.wrapper=document.createElement("div"),this.wrapper.className="overtype-wrapper",this.wrapper._instance=this,this.textarea=document.createElement("textarea"),this.textarea.className="overtype-input",this.textarea.placeholder=this.options.placeholder,this._configureTextarea(),this.preview=document.createElement("div"),this.preview.className="overtype-preview",this.preview.setAttribute("aria-hidden","true"),this.wrapper.appendChild(this.textarea),this.wrapper.appendChild(this.preview),this.element.appendChild(this.wrapper)}_configureTextarea(){this.textarea.setAttribute("autocomplete","off"),this.textarea.setAttribute("autocorrect","off"),this.textarea.setAttribute("autocapitalize","off"),this.textarea.setAttribute("spellcheck","false"),this.textarea.setAttribute("data-gramm","false"),this.textarea.setAttribute("data-gramm_editor","false"),this.textarea.setAttribute("data-enable-grammarly","false")}_applyOptions(){this.options.autofocus&&this.textarea.focus(),this.updatePreview()}updatePreview(){let t=this.textarea.value,e=this.textarea.selectionStart,r=this._getCurrentLine(t,e),n=u.parse(t,r,this.options.showActiveLineRaw);this.preview.innerHTML=n||'<span style="color: #808080;">Start typing...</span>',this.options.onChange&&this.initialized&&this.options.onChange(t,this)}_getCurrentLine(t,e){return t.substring(0,e).split(`
`).length-1}handleInput(t){this.updatePreview()}handleKeydown(t){!this.shortcuts.handleKeydown(t)&&this.options.onKeydown&&this.options.onKeydown(t,this)}handleScroll(t){this.preview.scrollTop=this.textarea.scrollTop,this.preview.scrollLeft=this.textarea.scrollLeft}getValue(){return this.textarea.value}setValue(t){this.textarea.value=t,this.updatePreview()}setTheme(t){this.options.theme=typeof t=="string"?y(t):t,s.injectStyles(this.options,!0),this.updatePreview()}focus(){this.textarea.focus()}blur(){this.textarea.blur()}isInitialized(){return this.initialized}reinit(t={}){this.options=this._mergeOptions({...this.options,...t}),this._applyOptions(),this.updatePreview()}destroy(){if(this.element.overTypeInstance=null,s.instances.delete(this.element),this.shortcuts&&this.shortcuts.destroy(),this.wrapper){let t=this.getValue();this.wrapper.remove(),this.element.textContent=t}this.initialized=!1}static init(t,e={}){return new s(t,e)}static getInstance(t){return t.overTypeInstance||s.instances.get(t)||null}static destroyAll(){document.querySelectorAll("[data-overtype-instance]").forEach(e=>{let r=s.getInstance(e);r&&r.destroy()})}static injectStyles(t={},e=!1){if(s.stylesInjected&&!e)return;let r=document.querySelector("style.overtype-styles");r&&r.remove();let n=L(t),a=document.createElement("style");a.className="overtype-styles",a.textContent=n,document.head.appendChild(a),s.stylesInjected=!0}static initGlobalListeners(){s.globalListenersInitialized||(document.addEventListener("input",t=>{if(t.target.classList.contains("overtype-input")){let e=t.target.closest(".overtype-wrapper"),r=e==null?void 0:e._instance;r&&r.handleInput(t)}}),document.addEventListener("keydown",t=>{if(t.target.classList.contains("overtype-input")){let e=t.target.closest(".overtype-wrapper"),r=e==null?void 0:e._instance;r&&r.handleKeydown(t)}}),document.addEventListener("scroll",t=>{if(t.target.classList.contains("overtype-input")){let e=t.target.closest(".overtype-wrapper"),r=e==null?void 0:e._instance;r&&r.handleScroll(t)}},!0),document.addEventListener("selectionchange",t=>{let e=document.activeElement;if(e&&e.classList.contains("overtype-input")){let r=e.closest(".overtype-wrapper"),n=r==null?void 0:r._instance;n&&(clearTimeout(n._selectionTimeout),n._selectionTimeout=setTimeout(()=>{n.updatePreview()},50))}}),s.globalListenersInitialized=!0)}};d(s,"instances",new WeakMap),d(s,"stylesInjected",!1),d(s,"globalListenersInitialized",!1),d(s,"instanceCount",0);var m=s;m.MarkdownParser=u;m.ShortcutsManager=v;m.themes={solar:f,cave:y("cave")};m.getTheme=y;m.mergeTheme=w;var M=m;return E(A);})();
/**
 * OverType - A lightweight markdown editor library with perfect WYSIWYG alignment
 * @version 1.0.0
 * @license MIT
 */
if(typeof module!=="undefined")module.exports=OverType;
