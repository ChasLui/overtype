/**
 * OverType v1.0.0
 * A lightweight markdown editor library with perfect WYSIWYG alignment
 * @license MIT
 * @author Demo User
 * https://github.com/demo/overtype
 */
var OverType=(()=>{var y=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var z=(i,t,e)=>t in i?y(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var _=(i,t)=>{for(var e in t)y(i,e,{get:t[e],enumerable:!0})},B=(i,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of C(t))!T.call(i,a)&&a!==e&&y(i,a,{get:()=>t[a],enumerable:!(r=$(t,a))||r.enumerable});return i};var E=i=>B(y({},"__esModule",{value:!0}),i);var u=(i,t,e)=>(z(i,typeof t!="symbol"?t+"":t,e),e);var M={};_(M,{OverType:()=>m,default:()=>I});var v=class{static escapeHtml(t){let e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};return t.replace(/[&<>"']/g,r=>e[r])}static preserveIndentation(t,e){let a=e.match(/^(\s*)/)[1].replace(/ /g,"&nbsp;");return t.replace(/^\s*/,a)}static parseHeader(t){return t.replace(/^(#{1,3})\s(.+)$/,(e,r,a)=>{let n=r.length;return`<span class="header ${["h1","h2","h3"][n-1]}"><span class="syntax-marker">${r}</span> ${a}</span>`})}static parseHorizontalRule(t){return t.match(/^(-{3,}|\*{3,}|_{3,})$/)?`<div><span class="hr-marker">${t}</span></div>`:null}static parseBlockquote(t){return t.replace(/^&gt; (.+)$/,(e,r)=>`<span class="blockquote"><span class="syntax-marker">&gt;</span> ${r}</span>`)}static parseBulletList(t){return t.replace(/^((?:&nbsp;)*)([-*])\s(.+)$/,(e,r,a,n)=>`${r}<span class="syntax-marker">${a}</span> ${n}`)}static parseNumberedList(t){return t.replace(/^((?:&nbsp;)*)(\d+\.)\s(.+)$/,(e,r,a,n)=>`${r}<span class="syntax-marker">${a}</span> ${n}`)}static parseCodeBlock(t){return t.startsWith("```")?`<div><span class="code-fence">${t}</span></div>`:null}static parseBold(t){return t=t.replace(/\*\*(.+?)\*\*/g,'<strong><span class="syntax-marker">**</span>$1<span class="syntax-marker">**</span></strong>'),t=t.replace(/__(.+?)__/g,'<strong><span class="syntax-marker">__</span>$1<span class="syntax-marker">__</span></strong>'),t}static parseItalic(t){return t=t.replace(new RegExp("(?<!\\*)\\*(?!\\*)(.+?)(?<!\\*)\\*(?!\\*)","g"),'<em><span class="syntax-marker">*</span>$1<span class="syntax-marker">*</span></em>'),t=t.replace(new RegExp("(?<!_)_(?!_)(.+?)(?<!_)_(?!_)","g"),'<em><span class="syntax-marker">_</span>$1<span class="syntax-marker">_</span></em>'),t}static parseInlineCode(t){return t.replace(/`(.+?)`/g,'<code><span class="syntax-marker">`</span>$1<span class="syntax-marker">`</span></code>')}static parseLinks(t){return t.replace(/\[(.+?)\]\((.+?)\)/g,'<a href="$2"><span class="syntax-marker">[</span>$1<span class="syntax-marker">](</span><span class="syntax-marker">$2</span><span class="syntax-marker">)</span></a>')}static parseInlineElements(t){let e=t;return e=this.parseInlineCode(e),e=this.parseLinks(e),e=this.parseBold(e),e=this.parseItalic(e),e}static parseLine(t){let e=this.escapeHtml(t);e=this.preserveIndentation(e,t);let r=this.parseHorizontalRule(e);if(r)return r;let a=this.parseCodeBlock(e);return a||(e=this.parseHeader(e),e=this.parseBlockquote(e),e=this.parseBulletList(e),e=this.parseNumberedList(e),e=this.parseInlineElements(e),e.trim()===""?"<div>&nbsp;</div>":`<div>${e}</div>`)}static parse(t,e=-1,r=!1){return t.split(`
`).map((s,p)=>r&&p===e?`<div class="raw-line">${this.escapeHtml(s)||"&nbsp;"}</div>`:this.parseLine(s)).join("")}};var f=class{constructor(t){this.editor=t,this.textarea=t.textarea,this.shortcuts=new Map,this.registerDefaults()}registerDefaults(){this.register("b",!1,()=>{this.wrapSelection("**")}),this.register("i",!1,()=>{this.wrapSelection("*")}),this.register("8",!0,()=>{this.toggleList("bullet")}),this.register("7",!0,()=>{this.toggleList("number")}),this.register("k",!1,()=>{this.wrapSelection("`")}),this.register("k",!0,()=>{this.insertLink()})}register(t,e,r){let a=`${e?"shift+":""}${t.toLowerCase()}`;this.shortcuts.set(a,r)}handleKeydown(t){if(!(navigator.platform.toLowerCase().includes("mac")?t.metaKey:t.ctrlKey))return!1;let a=`${t.shiftKey?"shift+":""}${t.key.toLowerCase()}`,n=this.shortcuts.get(a);return n?(t.preventDefault(),n.call(this),!0):!1}wrapSelection(t,e=t){let r=this.textarea.selectionStart,a=this.textarea.selectionEnd,s=this.textarea.value.slice(r,a);if(s.startsWith(t)&&s.endsWith(e)&&s.length>=t.length+e.length){let p=s.slice(t.length,s.length-e.length);this.textarea.setRangeText(p,r,a,"end"),this.editor.updatePreview();return}this.textarea.setRangeText(t+s+e,r,a,"end"),this.editor.updatePreview()}toggleList(t){let e=this.textarea.value,r=this.textarea.selectionStart,a=this.textarea.selectionEnd,n=e.lastIndexOf(`
`,r-1)+1,s=e.indexOf(`
`,a)===-1?e.length:e.indexOf(`
`,a),l=e.slice(n,s).split(`
`),h;t==="bullet"?h=l.map(c=>/^\s*[-*]\s+/.test(c)?c.replace(/^(\s*)[-*]\s+/,"$1"):c.replace(/^(\s*)/,"$1- ")).join(`
`):t==="number"&&(h=l.map((c,w)=>/^\s*\d+\.\s+/.test(c)?c.replace(/^(\s*)\d+\.\s+/,"$1"):c.replace(/^(\s*)/,`$1${w+1}. `)).join(`
`)),this.textarea.setRangeText(h,n,s,"end"),this.editor.updatePreview()}insertLink(){let t=this.textarea.selectionStart,e=this.textarea.selectionEnd,r=this.textarea.value.slice(t,e),a=r||"link text",n=`[${a}](url)`;if(this.textarea.setRangeText(n,t,e,"end"),!r)this.textarea.setSelectionRange(t+1,t+1+a.length);else{let s=t+n.indexOf("(url)")+1;this.textarea.setSelectionRange(s,s+3)}this.editor.updatePreview(),this.textarea.focus()}insertHeader(t){let e=this.textarea.value,r=this.textarea.selectionStart,a=e.lastIndexOf(`
`,r-1)+1,n=e.indexOf(`
`,r)===-1?e.length:e.indexOf(`
`,r),s=e.slice(a,n),p=s.match(/^(#{1,3})\s/);if(p)if(p[1].length===t){let l=s.replace(/^#{1,3}\s/,"");this.textarea.setRangeText(l,a,n,"end")}else{let l=s.replace(/^#{1,3}/,"#".repeat(t));this.textarea.setRangeText(l,a,n,"end")}else{let l="#".repeat(t)+" "+s;this.textarea.setRangeText(l,a,n,"end")}this.editor.updatePreview()}destroy(){this.shortcuts.clear()}};var d={name:"solar",colors:{bgPrimary:"#faf0ca",bgSecondary:"#ffffff",text:"#0d3b66",h1:"#f95738",h2:"#ee964b",h3:"#3d8a51",strong:"#ee964b",em:"#f95738",link:"#0d3b66",code:"#0d3b66",codeBg:"rgba(244, 211, 94, 0.2)",blockquote:"#5a7a9b",hr:"#5a7a9b",syntaxMarker:"rgba(13, 59, 102, 0.52)",cursor:"#f95738",selection:"rgba(244, 211, 94, 0.4)",listMarker:"#ee964b"}},x={name:"cave",colors:{bgPrimary:"#141E26",bgSecondary:"#1D2D3E",text:"#c5dde8",h1:"#d4a5ff",h2:"#f6ae2d",h3:"#9fcfec",strong:"#f6ae2d",em:"#9fcfec",link:"#9fcfec",code:"#c5dde8",codeBg:"#1a232b",blockquote:"#9fcfec",hr:"#c5dde8",syntaxMarker:"rgba(159, 207, 236, 0.73)",cursor:"#f26419",selection:"rgba(51, 101, 138, 0.4)",listMarker:"#f6ae2d"}},b={solar:d,cave:x,light:d,dark:x};function g(i){return typeof i=="string"?{...b[i]||b.solar,name:i}:i}function k(i){let t=[];for(let[e,r]of Object.entries(i)){let a=e.replace(/([A-Z])/g,"-$1").toLowerCase();t.push(`--${a}: ${r};`)}return t.join(`
`)}function S(i,t={}){return{...i,colors:{...i.colors,...t}}}function L(i={}){let{fontSize:t="14px",lineHeight:e=1.6,fontFamily:r="'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace",padding:a="20px",theme:n=null,mobile:s={}}=i,p=Object.keys(s).length>0?`
    @media (max-width: 640px) {
      .overtype-wrapper .overtype-input,
      .overtype-wrapper .overtype-preview {
        ${Object.entries(s).map(([h,c])=>`${h.replace(/([A-Z])/g,"-$1").toLowerCase()}: ${c} !important;`).join(`
        `)}
      }
    }
  `:"",l=n&&n.colors?k(n.colors):"";return`
    /* OverType Editor Styles */
    .overtype-wrapper {
      position: relative !important;
      width: 100% !important;
      height: 100% !important;
      overflow: hidden !important;
      background: var(--bg-secondary, #ffffff) !important;
      ${l?`
      /* Theme Variables */
      ${l}`:""}
    }

    /* Critical alignment styles - must be identical for both layers */
    .overtype-wrapper .overtype-input,
    .overtype-wrapper .overtype-preview {
      /* Positioning - must be identical */
      position: absolute !important;
      top: 0 !important;
      left: 0 !important;
      width: 100% !important;
      height: 100% !important;
      
      /* Font properties - any difference breaks alignment */
      font-family: ${r} !important;
      font-size: ${t} !important;
      line-height: ${e} !important;
      font-weight: normal !important;
      font-style: normal !important;
      font-variant: normal !important;
      font-stretch: normal !important;
      font-kerning: none !important;
      font-feature-settings: normal !important;
      
      /* Box model - must match exactly */
      padding: ${a} !important;
      margin: 0 !important;
      border: none !important;
      outline: none !important;
      box-sizing: border-box !important;
      
      /* Text layout - critical for character positioning */
      white-space: pre-wrap !important;
      word-wrap: break-word !important;
      word-break: normal !important;
      overflow-wrap: break-word !important;
      tab-size: 2 !important;
      -moz-tab-size: 2 !important;
      text-align: left !important;
      text-indent: 0 !important;
      letter-spacing: normal !important;
      word-spacing: normal !important;
      
      /* Text rendering */
      text-transform: none !important;
      text-rendering: auto !important;
      -webkit-font-smoothing: auto !important;
      -webkit-text-size-adjust: 100% !important;
      
      /* Direction and writing */
      direction: ltr !important;
      writing-mode: horizontal-tb !important;
      unicode-bidi: normal !important;
      text-orientation: mixed !important;
      
      /* Visual effects that could shift perception */
      text-shadow: none !important;
      filter: none !important;
      transform: none !important;
      zoom: 1 !important;
      
      /* Vertical alignment */
      vertical-align: baseline !important;
      
      /* Size constraints */
      min-width: 0 !important;
      min-height: 0 !important;
      max-width: none !important;
      max-height: none !important;
      
      /* Overflow */
      overflow-y: auto !important;
      overflow-x: auto !important;
      scrollbar-width: auto !important;
      scrollbar-gutter: auto !important;
      
      /* Animation/transition - disabled to prevent movement */
      animation: none !important;
      transition: none !important;
    }

    /* Input layer styles */
    .overtype-wrapper .overtype-input {
      /* Layer positioning */
      z-index: 1 !important;
      
      /* Text visibility */
      color: transparent !important;
      caret-color: var(--cursor, #f95738) !important;
      background-color: transparent !important;
      
      /* Textarea-specific */
      resize: none !important;
      appearance: none !important;
      -webkit-appearance: none !important;
      -moz-appearance: none !important;
      
      /* Prevent mobile zoom on focus */
      touch-action: manipulation !important;
      
      /* Disable autofill and spellcheck */
      autocomplete: off !important;
      autocorrect: off !important;
      autocapitalize: off !important;
      spellcheck: false !important;
    }

    .overtype-wrapper .overtype-input::selection {
      background-color: var(--selection, rgba(244, 211, 94, 0.4));
    }

    /* Preview layer styles */
    .overtype-wrapper .overtype-preview {
      /* Layer positioning */
      z-index: 0 !important;
      pointer-events: none !important;
      color: var(--text, #0d3b66) !important;
      background-color: transparent !important;
      
      /* Prevent text selection */
      user-select: none !important;
      -webkit-user-select: none !important;
      -moz-user-select: none !important;
      -ms-user-select: none !important;
    }

    /* Defensive styles for preview child divs */
    .overtype-wrapper .overtype-preview div {
      /* Reset any inherited styles */
      margin: 0 !important;
      padding: 0 !important;
      border: none !important;
      text-align: left !important;
      text-indent: 0 !important;
      display: block !important;
      position: static !important;
      transform: none !important;
      min-height: 0 !important;
      max-height: none !important;
      line-height: inherit !important;
      font-size: inherit !important;
      font-family: inherit !important;
    }

    /* Markdown element styling - NO SIZE CHANGES */
    .overtype-wrapper .overtype-preview .header {
      font-weight: bold !important;
    }

    /* Header colors */
    .overtype-wrapper .overtype-preview .h1 { 
      color: var(--h1, #f95738) !important; 
    }
    .overtype-wrapper .overtype-preview .h2 { 
      color: var(--h2, #ee964b) !important; 
    }
    .overtype-wrapper .overtype-preview .h3 { 
      color: var(--h3, #3d8a51) !important; 
    }

    /* Bold text */
    .overtype-wrapper .overtype-preview strong {
      color: var(--strong, #ee964b) !important;
      font-weight: bold !important;
    }

    /* Italic text */
    .overtype-wrapper .overtype-preview em {
      color: var(--em, #f95738) !important;
      text-decoration-color: var(--em, #f95738) !important;
      text-decoration-thickness: 1px !important;
      font-style: italic !important;
    }

    /* Inline code */
    .overtype-wrapper .overtype-preview code {
      background: var(--code-bg, rgba(244, 211, 94, 0.2)) !important;
      color: var(--code, #0d3b66) !important;
      padding: 0 !important;
      border-radius: 2px !important;
      font-family: inherit !important;
      font-weight: normal !important;
    }

    /* Code blocks */
    .overtype-wrapper .overtype-preview pre {
      background: #1e1e1e !important;
      padding: 0 !important;
      margin: 0 !important;
      border-radius: 4px !important;
      overflow-x: auto !important;
    }

    .overtype-wrapper .overtype-preview pre code {
      background: none !important;
    }

    /* Blockquotes */
    .overtype-wrapper .overtype-preview .blockquote {
      color: var(--blockquote, #5a7a9b) !important;
      padding: 0 !important;
      margin: 0 !important;
      border: none !important;
    }

    /* Links */
    .overtype-wrapper .overtype-preview a {
      color: var(--link, #0d3b66) !important;
      text-decoration: underline !important;
      font-weight: normal !important;
    }

    .overtype-wrapper .overtype-preview a:hover {
      text-decoration: underline !important;
      color: var(--link, #0d3b66) !important;
    }

    /* Lists - no list styling */
    .overtype-wrapper .overtype-preview ul,
    .overtype-wrapper .overtype-preview ol {
      list-style: none !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    .overtype-wrapper .overtype-preview li {
      margin: 0 !important;
      padding: 0 !important;
      list-style: none !important;
    }

    /* Horizontal rules */
    .overtype-wrapper .overtype-preview hr {
      border: none !important;
      color: var(--hr, #5a7a9b) !important;
      margin: 0 !important;
      padding: 0 !important;
    }

    .overtype-wrapper .overtype-preview .hr-marker {
      color: var(--hr, #5a7a9b) !important;
      opacity: 0.6 !important;
    }

    /* Code fence markers */
    .overtype-wrapper .overtype-preview .code-fence {
      color: var(--code, #0d3b66) !important;
      background: var(--code-bg, rgba(244, 211, 94, 0.2)) !important;
    }

    /* Raw markdown line */
    .overtype-wrapper .overtype-preview .raw-line {
      color: var(--raw-line, #5a7a9b) !important;
      font-style: normal !important;
      font-weight: normal !important;
    }

    /* Syntax markers */
    .overtype-wrapper .overtype-preview .syntax-marker {
      color: var(--syntax-marker, rgba(13, 59, 102, 0.52)) !important;
      opacity: 0.7 !important;
    }

    /* List markers */
    .overtype-wrapper .overtype-preview .list-marker {
      color: var(--list-marker, #ee964b) !important;
    }

    /* Stats bar */
    .overtype-wrapper.with-stats {
      padding-bottom: 40px !important;
    }
    
    .overtype-wrapper .overtype-stats {
      position: absolute !important;
      bottom: 0 !important;
      left: 0 !important;
      right: 0 !important;
      height: 40px !important;
      padding: 0 20px !important;
      background: #f8f9fa !important;
      border-top: 1px solid #e0e0e0 !important;
      display: flex !important;
      justify-content: space-between !important;
      align-items: center !important;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
      font-size: 0.85rem !important;
      color: #666 !important;
      z-index: 2 !important;
    }
    
    /* Dark theme stats bar */
    .overtype-wrapper[data-theme="cave"] .overtype-stats {
      background: var(--bg-secondary, #1D2D3E) !important;
      border-top: 1px solid rgba(197, 221, 232, 0.1) !important;
      color: var(--text, #c5dde8) !important;
    }
    
    .overtype-wrapper .overtype-stats .overtype-stat {
      display: flex !important;
      align-items: center !important;
      gap: 5px !important;
      white-space: nowrap !important;
    }
    
    .overtype-wrapper .overtype-stats .live-dot {
      width: 8px !important;
      height: 8px !important;
      background: #4caf50 !important;
      border-radius: 50% !important;
      animation: pulse 2s infinite !important;
    }
    
    @keyframes pulse {
      0%, 100% { opacity: 1; transform: scale(1); }
      50% { opacity: 0.6; transform: scale(1.2); }
    }
    
    /* Adjust textarea and preview for stats bar */
    .overtype-wrapper.with-stats .overtype-input,
    .overtype-wrapper.with-stats .overtype-preview {
      height: calc(100% - 40px) !important;
    }

    ${p}
  `}var o=class o{constructor(t,e={}){let r;if(typeof t=="string"){if(r=document.querySelectorAll(t),r.length===0)throw new Error(`No elements found for selector: ${t}`);r=Array.from(r)}else if(t instanceof Element)r=[t];else if(t instanceof NodeList)r=Array.from(t);else if(Array.isArray(t))r=t;else throw new Error("Invalid target: must be selector string, Element, NodeList, or Array");return r.map(n=>{if(n.overTypeInstance)return n.overTypeInstance.reinit(e),n.overTypeInstance;let s=Object.create(o.prototype);return s._init(n,e),n.overTypeInstance=s,o.instances.set(n,s),s})}_init(t,e={}){this.element=t,this.options=this._mergeOptions(e),this.instanceId=++o.instanceCount,this.initialized=!1,o.injectStyles(),o.initGlobalListeners();let r=t.querySelector(".overtype-wrapper");r?this._recoverFromDOM(r):this._buildFromScratch(),this.shortcuts=new f(this),this.initialized=!0,this.options.onChange&&this.options.onChange(this.getValue(),this)}_mergeOptions(t){let e={fontSize:"14px",lineHeight:1.6,fontFamily:"'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace",padding:"16px",mobile:{fontSize:"16px",padding:"12px",lineHeight:1.5},autofocus:!1,placeholder:"Start typing...",value:"",onChange:null,onKeydown:null,showActiveLineRaw:!1,showStats:!1,statsFormatter:null},{theme:r,colors:a,...n}=t;return{...e,...n}}_recoverFromDOM(t){if(this.wrapper=t,this.textarea=t.querySelector(".overtype-input"),this.preview=t.querySelector(".overtype-preview"),!this.textarea||!this.preview){t.remove(),this._buildFromScratch();return}this.wrapper._instance=this,this._configureTextarea(),this._applyOptions()}_buildFromScratch(){let t=this._extractContent();this.element.innerHTML="",this._createDOM(),(t||this.options.value)&&this.setValue(t||this.options.value),this._applyOptions()}_extractContent(){let t=this.element.querySelector(".overtype-input");return t?t.value:this.element.textContent||""}_createDOM(){this.wrapper=document.createElement("div"),this.wrapper.className="overtype-wrapper";let t=o.currentTheme||d,e=typeof t=="string"?t:t.name;e&&this.wrapper.setAttribute("data-theme",e),this.options.showStats&&this.wrapper.classList.add("with-stats"),this.wrapper._instance=this,this.textarea=document.createElement("textarea"),this.textarea.className="overtype-input",this.textarea.placeholder=this.options.placeholder,this._configureTextarea(),this.preview=document.createElement("div"),this.preview.className="overtype-preview",this.preview.setAttribute("aria-hidden","true"),this.wrapper.appendChild(this.textarea),this.wrapper.appendChild(this.preview),this.options.showStats&&(this.statsBar=document.createElement("div"),this.statsBar.className="overtype-stats",this.wrapper.appendChild(this.statsBar),this._updateStats()),this.element.appendChild(this.wrapper)}_configureTextarea(){this.textarea.setAttribute("autocomplete","off"),this.textarea.setAttribute("autocorrect","off"),this.textarea.setAttribute("autocapitalize","off"),this.textarea.setAttribute("spellcheck","false"),this.textarea.setAttribute("data-gramm","false"),this.textarea.setAttribute("data-gramm_editor","false"),this.textarea.setAttribute("data-enable-grammarly","false")}_applyOptions(){this.options.autofocus&&this.textarea.focus(),this.updatePreview()}updatePreview(){let t=this.textarea.value,e=this.textarea.selectionStart,r=this._getCurrentLine(t,e),a=v.parse(t,r,this.options.showActiveLineRaw);this.preview.innerHTML=a||'<span style="color: #808080;">Start typing...</span>',this._applyCodeBlockBackgrounds(),this.options.showStats&&this.statsBar&&this._updateStats(),this.options.onChange&&this.initialized&&this.options.onChange(t,this)}_applyCodeBlockBackgrounds(){let t=this.preview.querySelectorAll(".code-fence");for(let e=0;e<t.length-1;e+=2){let r=t[e],a=t[e+1],n=r.parentElement,s=a.parentElement;if(!n||!s)continue;r.style.display="block",a.style.display="block";let p=n;for(;p&&(p.style.background="var(--code-bg, rgba(244, 211, 94, 0.2))",!(p===s||(p=p.nextElementSibling,!p||p.tagName!=="DIV"))););}}_getCurrentLine(t,e){return t.substring(0,e).split(`
`).length-1}handleInput(t){this.updatePreview()}handleKeydown(t){!this.shortcuts.handleKeydown(t)&&this.options.onKeydown&&this.options.onKeydown(t,this)}handleScroll(t){this.preview.scrollTop=this.textarea.scrollTop,this.preview.scrollLeft=this.textarea.scrollLeft}getValue(){return this.textarea.value}setValue(t){this.textarea.value=t,this.updatePreview()}focus(){this.textarea.focus()}blur(){this.textarea.blur()}isInitialized(){return this.initialized}reinit(t={}){this.options=this._mergeOptions({...this.options,...t}),this._applyOptions(),this.updatePreview()}_updateStats(){if(!this.statsBar)return;let t=this.textarea.value,e=t.split(`
`),r=t.length,a=t.split(/\s+/).filter(c=>c.length>0).length,n=this.textarea.selectionStart,p=t.substring(0,n).split(`
`),l=p.length,h=p[p.length-1].length+1;this.options.statsFormatter?this.statsBar.innerHTML=this.options.statsFormatter({chars:r,words:a,lines:e.length,line:l,column:h}):this.statsBar.innerHTML=`
          <div class="overtype-stat">
            <span class="live-dot"></span>
            <span>${r} chars, ${a} words, ${e.length} lines</span>
          </div>
          <div class="overtype-stat">Line ${l}, Col ${h}</div>
        `}showStats(t){this.options.showStats=t,t&&!this.statsBar?(this.statsBar=document.createElement("div"),this.statsBar.className="overtype-stats",this.wrapper.appendChild(this.statsBar),this.wrapper.classList.add("with-stats"),this._updateStats()):!t&&this.statsBar&&(this.statsBar.remove(),this.statsBar=null,this.wrapper.classList.remove("with-stats"))}destroy(){if(this.element.overTypeInstance=null,o.instances.delete(this.element),this.shortcuts&&this.shortcuts.destroy(),this.wrapper){let t=this.getValue();this.wrapper.remove(),this.element.textContent=t}this.initialized=!1}static init(t,e={}){return new o(t,e)}static getInstance(t){return t.overTypeInstance||o.instances.get(t)||null}static destroyAll(){document.querySelectorAll("[data-overtype-instance]").forEach(e=>{let r=o.getInstance(e);r&&r.destroy()})}static injectStyles(t=!1){if(o.stylesInjected&&!t)return;let e=document.querySelector("style.overtype-styles");e&&e.remove();let r=o.currentTheme||d,a=L({theme:r}),n=document.createElement("style");n.className="overtype-styles",n.textContent=a,document.head.appendChild(n),o.stylesInjected=!0}static setTheme(t,e=null){let r=typeof t=="string"?g(t):t;e&&(r=S(r,e)),o.currentTheme=r,o.injectStyles(!0),document.querySelectorAll(".overtype-wrapper").forEach(a=>{let n=typeof r=="string"?r:r.name;n&&a.setAttribute("data-theme",n);let s=a._instance;s&&s.updatePreview()})}static initGlobalListeners(){o.globalListenersInitialized||(document.addEventListener("input",t=>{if(t.target.classList.contains("overtype-input")){let e=t.target.closest(".overtype-wrapper"),r=e==null?void 0:e._instance;r&&r.handleInput(t)}}),document.addEventListener("keydown",t=>{if(t.target.classList.contains("overtype-input")){let e=t.target.closest(".overtype-wrapper"),r=e==null?void 0:e._instance;r&&r.handleKeydown(t)}}),document.addEventListener("scroll",t=>{if(t.target.classList.contains("overtype-input")){let e=t.target.closest(".overtype-wrapper"),r=e==null?void 0:e._instance;r&&r.handleScroll(t)}},!0),document.addEventListener("selectionchange",t=>{let e=document.activeElement;if(e&&e.classList.contains("overtype-input")){let r=e.closest(".overtype-wrapper"),a=r==null?void 0:r._instance;a&&(a.options.showStats&&a.statsBar&&a._updateStats(),clearTimeout(a._selectionTimeout),a._selectionTimeout=setTimeout(()=>{a.updatePreview()},50))}}),o.globalListenersInitialized=!0)}};u(o,"instances",new WeakMap),u(o,"stylesInjected",!1),u(o,"globalListenersInitialized",!1),u(o,"instanceCount",0);var m=o;m.MarkdownParser=v;m.ShortcutsManager=f;m.themes={solar:d,cave:g("cave")};m.getTheme=g;m.currentTheme=d;var I=m;return E(M);})();
/**
 * OverType - A lightweight markdown editor library with perfect WYSIWYG alignment
 * @version 1.0.0
 * @license MIT
 */
